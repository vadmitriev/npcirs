import React from 'react';
declare class ActionSheet extends React.Component<ActionSheetProps, any> { }
export interface ActionSheetProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	cover?: boolean
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enter?: string
	enterAnimation?: string | any
	exit?: string
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	reveal?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	side?: string
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	stretchX?: boolean
	stretchY?: boolean
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Audio extends React.Component<AudioProps, any> { }
export interface AudioProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoPause?: boolean
	autoResume?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	controls?: boolean
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enableControls?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	loop?: boolean
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	media?: any
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	muted?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	preload?: boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	url?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	volume?: number
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onEnded?: (this: Media, time: number) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onMutedChange?: (this: Media, muted: boolean) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPause?: (this: Media, time: number) => void
	onPlay?: (this: Media) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onStop?: (this: Media) => void
	onTimeUpdate?: (this: Media, time: number) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onVolumeChange?: (this: Media, volume: number) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Button extends React.Component<ButtonProps, any> { }
export interface ButtonProps {
	allowDepress?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	arrow?: boolean
	arrowAlign?: string
	autoEvent?: string
	axisLock?: boolean
	badgeText?: string
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	buttonType?: string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enableToggle?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	handler?: Function
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | string | Object
	menuAlign?: string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	pressed?: boolean
	pressedDelay?: number | boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	stretchMenu?: boolean
	style?: string | Object
	tabIndex?: number
	text?: string
	textAlign?: string
	toFrontOnShow?: boolean
	toggleHandler?: Function
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: string | number
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforePressedChange?: (sender: Button, value: boolean, oldValue: boolean) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onPressedChange?: (sender: Button, value: boolean, oldValue: boolean) => void
	onRelease?: (this: Button, e: any) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onTap?: (this: Button, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_Event extends React.Component<Calendar_EventProps, any> { }
export interface Calendar_EventProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	defaultTitle?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	endDate?: any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	mode?: string
	model?: any
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	palette?: any
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	resize?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	startDate?: any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	timeFormat?: string
	title?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	view?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_Form_Add extends React.Component<Calendar_Form_AddProps, any> { }
export interface Calendar_Form_AddProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allDayField?: Object
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	api?: Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	baseParams?: Object
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	calendarField?: Object
	cancelButton?: Object
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultEndTime?: number[]
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultStartTime?: number[]
	defaultToolWeights?: Object
	defaultType?: string
	descriptionField?: Object
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	dropButton?: Object
	enableSubmissionForm?: boolean
	enctype?: string
	endDateField?: Object
	endTimeField?: Object
	enterAnimation?: string | any
	event?: any
	exitAnimation?: string | any
	fieldSeparators?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	inputBorders?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	method?: string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multipartDetection?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	paramOrder?: string | string[]
	paramsAsHash?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	saveButton?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	standardSubmit?: boolean
	startDateField?: Object
	startTimeField?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	submitOnAction?: Object
	tabIndex?: number
	tbar?: Object | Object[]
	timeout?: number
	title?: string
	titleAlign?: string
	titleField?: Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	trackResetOnLoad?: boolean
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	url?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	view?: any
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeSubmit?: (this: any, values: Object, options: Object, e: any) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCancel?: (this: any) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onDrop?: (this: any) => void
	onErased?: (sender: Component) => void
	onException?: (this: any, result: Object) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSave?: (this: any, context: Object) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSubmit?: (this: any, result: Object, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_Calendar_Picker extends React.Component<Calendar_Calendar_PickerProps, any> { }
export interface Calendar_Calendar_PickerProps {
	alignTarget?: string
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoFocus?: boolean
	autoFocusLast?: boolean
	autoHideInputMask?: boolean
	autoLoadOnValue?: boolean
	autoSelect?: boolean | string
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	chipView?: any
	clearable?: boolean
	cls?: string | string[]
	collapseOnSelect?: boolean
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	delimiter?: string
	disabled?: boolean
	displayed?: boolean
	displayField?: string | number
	displayTpl?: string | string[] | any
	docked?: string
	draggable?: boolean | Object | any
	edgePicker?: Object
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	floatedPicker?: Object
	floatedPickerAlign?: string
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hiddenName?: string
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hideTrigger?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemCls?: string
	itemId?: string
	itemTpl?: string | any
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	matchFieldWidth?: boolean
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multiSelect?: boolean
	name?: string
	nameable?: boolean
	options?: Object[]
	padding?: number | string
	pattern?: string
	picker?: string | Object
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	recordCreator?: Function | string
	recordCreatorScope?: Object
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selection?: any
	selectOnTab?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any | Object | string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	valueField?: string | number
	valueNotFoundText?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: any, newValue: any, oldValue: any) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onCollapse?: (field: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onExpand?: (field: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: any, newValue: any) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_Form_Edit extends React.Component<Calendar_Form_EditProps, any> { }
export interface Calendar_Form_EditProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allDayField?: Object
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	api?: Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	baseParams?: Object
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	calendarField?: Object
	cancelButton?: Object
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultEndTime?: number[]
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultStartTime?: number[]
	defaultToolWeights?: Object
	defaultType?: string
	descriptionField?: Object
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	dropButton?: Object
	enableSubmissionForm?: boolean
	enctype?: string
	endDateField?: Object
	endTimeField?: Object
	enterAnimation?: string | any
	event?: any
	exitAnimation?: string | any
	fieldSeparators?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	inputBorders?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	method?: string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multipartDetection?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	paramOrder?: string | string[]
	paramsAsHash?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	saveButton?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	standardSubmit?: boolean
	startDateField?: Object
	startTimeField?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	submitOnAction?: Object
	tabIndex?: number
	tbar?: Object | Object[]
	timeout?: number
	title?: string
	titleAlign?: string
	titleField?: Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	trackResetOnLoad?: boolean
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	url?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	view?: any
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeSubmit?: (this: any, values: Object, options: Object, e: any) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCancel?: (this: any) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onDrop?: (this: any) => void
	onErased?: (sender: Component) => void
	onException?: (this: any, result: Object) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSave?: (this: any, context: Object) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSubmit?: (this: any, result: Object, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_TimeField extends React.Component<Calendar_TimeFieldProps, any> { }
export interface Calendar_TimeFieldProps {
	alignTarget?: string
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoFocus?: boolean
	autoFocusLast?: boolean
	autoHideInputMask?: boolean
	autoLoadOnValue?: boolean
	autoSelect?: boolean | string
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	chipView?: any
	clearable?: boolean
	cls?: string | string[]
	collapseOnSelect?: boolean
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	delimiter?: string
	disabled?: boolean
	displayed?: boolean
	displayField?: string | number
	displayTpl?: string | string[] | any
	docked?: string
	draggable?: boolean | Object | any
	edgePicker?: Object
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	floatedPicker?: Object
	floatedPickerAlign?: string
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hiddenName?: string
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hideTrigger?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemCls?: string
	itemId?: string
	itemTpl?: string | any
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	matchFieldWidth?: boolean
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multiSelect?: boolean
	name?: string
	nameable?: boolean
	options?: Object[]
	padding?: number | string
	pattern?: string
	picker?: string | Object
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	recordCreator?: Function | string
	recordCreatorScope?: Object
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selection?: any
	selectOnTab?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any | Object | string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	valueField?: string | number
	valueNotFoundText?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: any, newValue: any, oldValue: any) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onCollapse?: (field: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onExpand?: (field: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: any, newValue: any) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_DaysHeader extends React.Component<Calendar_DaysHeaderProps, any> { }
export interface Calendar_DaysHeaderProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cellCls?: string
	centered?: boolean
	cls?: string | string[]
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	format?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	viewModel?: string | Object | any
	visibleDays?: number
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_WeeksHeader extends React.Component<Calendar_WeeksHeaderProps, any> { }
export interface Calendar_WeeksHeaderProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cellCls?: string
	centered?: boolean
	cls?: string | string[]
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	format?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	viewModel?: string | Object | any
	visibleDays?: number
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_List extends React.Component<Calendar_ListProps, any> { }
export interface Calendar_ListProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	associatedData?: boolean | Object
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	deferEmptyText?: boolean
	deselectOnContainerClick?: boolean
	disabled?: boolean
	disableSelection?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	emptyItemText?: string
	emptyText?: string | boolean
	emptyTextDefaults?: Object | Component
	emptyTextProperty?: string
	enableTextSelection?: boolean
	enableToggle?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	inline?: boolean | Object
	innerCls?: string
	itemButtonMode?: boolean
	itemCls?: string
	itemId?: string
	itemRipple?: boolean | Object
	itemTpl?: string | string[] | any
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	loadingHeight?: number
	loadingText?: string | boolean
	margin?: number | string
	markDirty?: boolean
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	pressedDelay?: number
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	scrollDock?: string
	scrollToTopOnRefresh?: boolean
	selectable?: Object | any
	selected?: any
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store: any | Object
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerCtEvent?: string
	triggerEvent?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChildDoubleTap?: (this: DataView, location: any) => void
	onChildLongpress?: (this: DataView, location: any) => void
	onChildMouseEnter?: (this: DataView, location: any) => void
	onChildMouseLeave?: (this: DataView, location: any) => void
	onChildSingleTap?: (this: DataView, location: any) => void
	onChildTap?: (this: DataView, location: any) => void
	onChildTapHold?: (this: DataView, location: any) => void
	onChildTouchCancel?: (this: DataView, location: any) => void
	onChildTouchEnd?: (this: DataView, location: any) => void
	onChildTouchMove?: (this: DataView, location: any) => void
	onChildTouchStart?: (this: DataView, location: any) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: DataView, records: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemDoubleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemLongpress?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseEnter?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseLeave?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSingleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSwipe?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTapHold?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchCancel?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchEnd?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchMove?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchStart?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: () => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNavigate?: (this: DataView, to: any, from: any) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRefresh?: (this: DataView) => void
	onRemove?: () => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onRowSelection?: (view: DataView, selection: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: DataView, selected: any) => void
	onSelectionChange?: (view: DataView, records: any, selected: boolean, selection: any) => void
	onShow?: (sender: Component) => void
	onStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_Day extends React.Component<Calendar_DayProps, any> { }
export interface Calendar_DayProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	addForm?: Object
	allowFocusingDisabledChildren?: boolean
	allowSelection?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	controlStoreRange?: boolean
	data?: Object
	dayHeader?: Object
	dayHeaderFormat?: string
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	displayOverlap?: boolean
	docked?: string
	draggable?: boolean
	droppable?: boolean
	editForm?: Object
	endTime?: number
	enterAnimation?: string | any
	eventDefaults?: Object
	eventRelayers?: Object
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	gestureNavigation?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	resizeEvents?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showNowMarker?: boolean
	standardButtons?: Object
	startTime?: number
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: Object | any
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	timeFormat?: string
	timezoneOffset?: number
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	view?: Object
	viewModel?: string | Object | any
	visibleDays?: number
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeEventAdd?: (this: any, context: Object) => void
	onBeforeEventDragStart?: (this: any, context: Object) => void
	onBeforeEventEdit?: (this: any, context: Object) => void
	onBeforeEventResizeStart?: (this: any, context: Object) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onEventAdd?: (this: any, context: Object) => void
	onEventDrop?: (this: any, context: Object) => void
	onEventEdit?: (this: any, context: Object) => void
	onEventResize?: (this: any, context: Object) => void
	onEventTap?: (this: any, context: Object) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onValidateEventAdd?: (this: any, context: Object) => void
	onValidateEventDrop?: (this: any, context: Object) => void
	onValidateEventEdit?: (this: any, context: Object) => void
	onValidateEventResize?: (this: any, context: Object) => void
	onValueChange?: (this: any, context: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_Days extends React.Component<Calendar_DaysProps, any> { }
export interface Calendar_DaysProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	addForm?: Object
	allowFocusingDisabledChildren?: boolean
	allowSelection?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	controlStoreRange?: boolean
	data?: Object
	dayHeader?: Object
	dayHeaderFormat?: string
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	displayOverlap?: boolean
	docked?: string
	draggable?: boolean
	droppable?: boolean
	editForm?: Object
	endTime?: number
	enterAnimation?: string | any
	eventDefaults?: Object
	eventRelayers?: Object
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	gestureNavigation?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	resizeEvents?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showNowMarker?: boolean
	standardButtons?: Object
	startTime?: number
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: Object | any
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	timeFormat?: string
	timezoneOffset?: number
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	view?: Object
	viewModel?: string | Object | any
	visibleDays?: number
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeEventAdd?: (this: any, context: Object) => void
	onBeforeEventDragStart?: (this: any, context: Object) => void
	onBeforeEventEdit?: (this: any, context: Object) => void
	onBeforeEventResizeStart?: (this: any, context: Object) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onEventAdd?: (this: any, context: Object) => void
	onEventDrop?: (this: any, context: Object) => void
	onEventEdit?: (this: any, context: Object) => void
	onEventResize?: (this: any, context: Object) => void
	onEventTap?: (this: any, context: Object) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onValidateEventAdd?: (this: any, context: Object) => void
	onValidateEventDrop?: (this: any, context: Object) => void
	onValidateEventEdit?: (this: any, context: Object) => void
	onValidateEventResize?: (this: any, context: Object) => void
	onValueChange?: (this: any, context: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_Month extends React.Component<Calendar_MonthProps, any> { }
export interface Calendar_MonthProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	addForm?: Object
	addOnSelect?: boolean
	allowFocusingDisabledChildren?: boolean
	allowSelection?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	controlStoreRange?: boolean
	data?: Object
	dayFormat?: boolean
	dayHeader?: Object
	dayHeaderFormat?: string
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean
	droppable?: boolean
	editForm?: Object
	enterAnimation?: string | any
	eventDefaults?: Object
	eventRelayers?: Object
	exitAnimation?: string | any
	firstDayOfWeek?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	gestureNavigation?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	overflowText?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showOverflow?: string
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: Object | any
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	timezoneOffset?: number
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	view?: Object
	viewModel?: string | Object | any
	visibleDays?: number
	visibleWeeks?: number
	weekendDays?: number[]
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeEventAdd?: (this: any, context: Object) => void
	onBeforeEventDragStart?: (this: any, context: Object) => void
	onBeforeEventEdit?: (this: any, context: Object) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onEventAdd?: (this: any, context: Object) => void
	onEventDrop?: (this: any, context: Object) => void
	onEventEdit?: (this: any, context: Object) => void
	onEventTap?: (this: any, context: Object) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onValidateEventAdd?: (this: any, context: Object) => void
	onValidateEventDrop?: (this: any, context: Object) => void
	onValidateEventEdit?: (this: any, context: Object) => void
	onValueChange?: (this: any, context: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar extends React.Component<CalendarProps, any> { }
export interface CalendarProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	calendarList?: Object
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	createButton?: Object
	createButtonPosition?: string
	data?: Object
	dateTitle?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	defaultView?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menuButton?: Object
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	nextButton?: Object
	padding?: number | string
	plugins?: Object[] | any | Object
	previousButton?: Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	sheet?: Object
	shim?: boolean
	showAnimation?: string | any
	sideBar?: Object
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: Object | any
	style?: string | Object
	switcher?: Object
	switcherPosition?: string
	tabIndex?: number
	tbar?: Object | Object[]
	timezoneOffset?: number
	title?: string | any
	titleAlign?: string
	titleBar?: Object
	todayButton?: Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	viewModel?: string | Object | any
	views?: Object
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_Week extends React.Component<Calendar_WeekProps, any> { }
export interface Calendar_WeekProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	addForm?: Object
	allowFocusingDisabledChildren?: boolean
	allowSelection?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	controlStoreRange?: boolean
	data?: Object
	dayHeader?: Object
	dayHeaderFormat?: string
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	displayOverlap?: boolean
	docked?: string
	draggable?: boolean
	droppable?: boolean
	editForm?: Object
	endTime?: number
	enterAnimation?: string | any
	eventDefaults?: Object
	eventRelayers?: Object
	exitAnimation?: string | any
	firstDayOfWeek?: number
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	gestureNavigation?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	resizeEvents?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showNowMarker?: boolean
	standardButtons?: Object
	startTime?: number
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: Object | any
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	timeFormat?: string
	timezoneOffset?: number
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	view?: Object
	viewModel?: string | Object | any
	visibleDays?: number
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeEventAdd?: (this: any, context: Object) => void
	onBeforeEventDragStart?: (this: any, context: Object) => void
	onBeforeEventEdit?: (this: any, context: Object) => void
	onBeforeEventResizeStart?: (this: any, context: Object) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onEventAdd?: (this: any, context: Object) => void
	onEventDrop?: (this: any, context: Object) => void
	onEventEdit?: (this: any, context: Object) => void
	onEventResize?: (this: any, context: Object) => void
	onEventTap?: (this: any, context: Object) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onValidateEventAdd?: (this: any, context: Object) => void
	onValidateEventDrop?: (this: any, context: Object) => void
	onValidateEventEdit?: (this: any, context: Object) => void
	onValidateEventResize?: (this: any, context: Object) => void
	onValueChange?: (this: any, context: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_Weeks extends React.Component<Calendar_WeeksProps, any> { }
export interface Calendar_WeeksProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	addForm?: Object
	addOnSelect?: boolean
	allowFocusingDisabledChildren?: boolean
	allowSelection?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	controlStoreRange?: boolean
	data?: Object
	dayFormat?: boolean
	dayHeader?: Object
	dayHeaderFormat?: string
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean
	droppable?: boolean
	editForm?: Object
	enterAnimation?: string | any
	eventDefaults?: Object
	eventRelayers?: Object
	exitAnimation?: string | any
	firstDayOfWeek?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	gestureNavigation?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	overflowText?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showOverflow?: string
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: Object | any
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	timezoneOffset?: number
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	view?: Object
	viewModel?: string | Object | any
	visibleDays?: number
	visibleWeeks?: number
	weekendDays?: number[]
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeEventAdd?: (this: any, context: Object) => void
	onBeforeEventDragStart?: (this: any, context: Object) => void
	onBeforeEventEdit?: (this: any, context: Object) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onEventAdd?: (this: any, context: Object) => void
	onEventDrop?: (this: any, context: Object) => void
	onEventEdit?: (this: any, context: Object) => void
	onEventTap?: (this: any, context: Object) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onValidateEventAdd?: (this: any, context: Object) => void
	onValidateEventDrop?: (this: any, context: Object) => void
	onValidateEventEdit?: (this: any, context: Object) => void
	onValueChange?: (this: any, context: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_DayView extends React.Component<Calendar_DayViewProps, any> { }
export interface Calendar_DayViewProps {
	addForm?: Object
	allowSelection?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	displayOverlap?: boolean
	docked?: string
	draggable?: boolean
	droppable?: boolean
	editForm?: Object
	endTime?: number
	enterAnimation?: string | any
	eventDefaults?: Object
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	gestureNavigation?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	resizeEvents?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showNowMarker?: boolean
	startTime?: number
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: Object | any
	style?: string | Object
	tabIndex?: number
	timeFormat?: string
	timeRenderer?: Function
	timezoneOffset?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	viewModel?: string | Object | any
	visibleDays?: number
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeEventAdd?: (this: any, context: Object) => void
	onBeforeEventDragStart?: (this: any, context: Object) => void
	onBeforeEventEdit?: (this: any, context: Object) => void
	onBeforeEventResizeStart?: (this: any, context: Object) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onEventAdd?: (this: any, context: Object) => void
	onEventDrop?: (this: any, context: Object) => void
	onEventEdit?: (this: any, context: Object) => void
	onEventResize?: (this: any, context: Object) => void
	onEventTap?: (this: any, context: Object) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onValidateEventAdd?: (this: any, context: Object) => void
	onValidateEventDrop?: (this: any, context: Object) => void
	onValidateEventEdit?: (this: any, context: Object) => void
	onValidateEventResize?: (this: any, context: Object) => void
	onValueChange?: (this: any, context: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_DaysView extends React.Component<Calendar_DaysViewProps, any> { }
export interface Calendar_DaysViewProps {
	addForm?: Object
	allowSelection?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	displayOverlap?: boolean
	docked?: string
	draggable?: boolean
	droppable?: boolean
	editForm?: Object
	endTime?: number
	enterAnimation?: string | any
	eventDefaults?: Object
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	gestureNavigation?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	resizeEvents?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showNowMarker?: boolean
	startTime?: number
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: Object | any
	style?: string | Object
	tabIndex?: number
	timeFormat?: string
	timeRenderer?: Function
	timezoneOffset?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	viewModel?: string | Object | any
	visibleDays?: number
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeEventAdd?: (this: any, context: Object) => void
	onBeforeEventDragStart?: (this: any, context: Object) => void
	onBeforeEventEdit?: (this: any, context: Object) => void
	onBeforeEventResizeStart?: (this: any, context: Object) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onEventAdd?: (this: any, context: Object) => void
	onEventDrop?: (this: any, context: Object) => void
	onEventEdit?: (this: any, context: Object) => void
	onEventResize?: (this: any, context: Object) => void
	onEventTap?: (this: any, context: Object) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onValidateEventAdd?: (this: any, context: Object) => void
	onValidateEventDrop?: (this: any, context: Object) => void
	onValidateEventEdit?: (this: any, context: Object) => void
	onValidateEventResize?: (this: any, context: Object) => void
	onValueChange?: (this: any, context: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_MonthView extends React.Component<Calendar_MonthViewProps, any> { }
export interface Calendar_MonthViewProps {
	addForm?: Object
	addOnSelect?: boolean
	allowSelection?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	dayFormat?: string
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean
	droppable?: boolean
	editForm?: Object
	enterAnimation?: string | any
	eventDefaults?: Object
	exitAnimation?: string | any
	firstDayOfWeek?: number
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	gestureNavigation?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	overflowText?: string
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showOverflow?: string
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: Object | any
	style?: string | Object
	tabIndex?: number
	timezoneOffset?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	viewModel?: string | Object | any
	visibleDays?: number
	visibleWeeks?: number
	weekendDays?: number[]
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeEventAdd?: (this: any, context: Object) => void
	onBeforeEventDragStart?: (this: any, context: Object) => void
	onBeforeEventEdit?: (this: any, context: Object) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onEventAdd?: (this: any, context: Object) => void
	onEventDrop?: (this: any, context: Object) => void
	onEventEdit?: (this: any, context: Object) => void
	onEventTap?: (this: any, context: Object) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: any, context: Object) => void
	onSelectRange?: (this: any, context: Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onValidateEventAdd?: (this: any, context: Object) => void
	onValidateEventDrop?: (this: any, context: Object) => void
	onValidateEventEdit?: (this: any, context: Object) => void
	onValueChange?: (this: any, context: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_MultiView extends React.Component<Calendar_MultiViewProps, any> { }
export interface Calendar_MultiViewProps {
	compact?: boolean
	compactOptions?: Object
	defaultView?: string
	layout?: Object | string
	store?: Object | any
	timezoneOffset?: number
	value?: any
	views?: Object
}
declare class Calendar_WeekView extends React.Component<Calendar_WeekViewProps, any> { }
export interface Calendar_WeekViewProps {
	addForm?: Object
	allowSelection?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	displayOverlap?: boolean
	docked?: string
	draggable?: boolean
	droppable?: boolean
	editForm?: Object
	endTime?: number
	enterAnimation?: string | any
	eventDefaults?: Object
	exitAnimation?: string | any
	firstDayOfWeek?: number
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	gestureNavigation?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	resizeEvents?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showNowMarker?: boolean
	startTime?: number
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: Object | any
	style?: string | Object
	tabIndex?: number
	timeFormat?: string
	timeRenderer?: Function
	timezoneOffset?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	viewModel?: string | Object | any
	visibleDays?: number
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeEventAdd?: (this: any, context: Object) => void
	onBeforeEventDragStart?: (this: any, context: Object) => void
	onBeforeEventEdit?: (this: any, context: Object) => void
	onBeforeEventResizeStart?: (this: any, context: Object) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onEventAdd?: (this: any, context: Object) => void
	onEventDrop?: (this: any, context: Object) => void
	onEventEdit?: (this: any, context: Object) => void
	onEventResize?: (this: any, context: Object) => void
	onEventTap?: (this: any, context: Object) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onValidateEventAdd?: (this: any, context: Object) => void
	onValidateEventDrop?: (this: any, context: Object) => void
	onValidateEventEdit?: (this: any, context: Object) => void
	onValidateEventResize?: (this: any, context: Object) => void
	onValueChange?: (this: any, context: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Calendar_WeeksView extends React.Component<Calendar_WeeksViewProps, any> { }
export interface Calendar_WeeksViewProps {
	addForm?: Object
	addOnSelect?: boolean
	allowSelection?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	compact?: boolean
	compactOptions?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	dayFormat?: string
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean
	droppable?: boolean
	editForm?: Object
	enterAnimation?: string | any
	eventDefaults?: Object
	exitAnimation?: string | any
	firstDayOfWeek?: number
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	gestureNavigation?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	overflowText?: string
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showOverflow?: string
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: Object | any
	style?: string | Object
	tabIndex?: number
	timezoneOffset?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	viewModel?: string | Object | any
	visibleDays?: number
	visibleWeeks?: number
	weekendDays?: number[]
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeEventAdd?: (this: any, context: Object) => void
	onBeforeEventDragStart?: (this: any, context: Object) => void
	onBeforeEventEdit?: (this: any, context: Object) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onEventAdd?: (this: any, context: Object) => void
	onEventDrop?: (this: any, context: Object) => void
	onEventEdit?: (this: any, context: Object) => void
	onEventTap?: (this: any, context: Object) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: any, context: Object) => void
	onSelectRange?: (this: any, context: Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onValidateEventAdd?: (this: any, context: Object) => void
	onValidateEventDrop?: (this: any, context: Object) => void
	onValidateEventEdit?: (this: any, context: Object) => void
	onValueChange?: (this: any, context: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Carousel extends React.Component<CarouselProps, any> { }
export interface CarouselProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	direction?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	indicator?: boolean | any
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Axis3D extends React.Component<Axis3DProps, any> { }
export interface Axis3DProps {
	adjustByMajorUnit?: boolean
	background?: Object
	fields?: Object[]
	floating?: number | Object
	grid?: Object
	hidden?: boolean
	id?: string
	label?: Object
	layout?: Object | any
	limits?: Object[] | Object
	linkedTo?: any | string | number
	majorTickSteps?: number
	margin?: number
	maximum?: number
	maxZoom?: number
	minimum?: number
	minorTickSteps?: number
	minZoom?: number
	needHighPrecision?: boolean
	position?: string
	reconcileRange?: boolean
	renderer?: Function
	segmenter?: Object | any
	style?: Object
	title?: string | Object
	titleMargin?: number
	visibleRange?: Object[]
	onRangeChange?: (axis: any, range: Object[], oldRange: Object[]) => void
	onVisibleRangeChange?: (axis: any, visibleRange: Object[]) => void
}
declare class Cartesian extends React.Component<CartesianProps, any> { }
export interface CartesianProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	animation?: boolean | Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axes?: any | Object[] | Object
	axisLock?: boolean
	background?: Object
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	captions?: Object
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	colors?: Object[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	downloadServerUrl?: string
	draggable?: boolean | Object | any
	engine?: string
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	flipXY?: boolean
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	gradients?: Object[]
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightItem?: Object
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	innerPadding?: Object
	insetPadding?: Object | number | string
	interactions?: Object[]
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	legend?: Legend | any | boolean
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	series?: any | Object[]
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sprites?: Object[]
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any | string | Object
	style?: Object
	tabIndex?: number
	theme?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRefresh?: (this: any) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBodyResize?: (size: Object) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemClick?: (chart: any, item: Object, event: any) => void
	onItemDblClick?: (chart: any, item: Object, event: any) => void
	onItemhighlight?: (this: any, newItem: Object, oldItem: Object) => void
	onItemhighlightChange?: (this: any, newItem: Object, oldItem: Object) => void
	onItemMouseDown?: (chart: any, item: Object, event: any) => void
	onItemMouseMove?: (chart: any, item: Object, event: any) => void
	onItemMouseOut?: (chart: any, item: Object, event: any) => void
	onItemMouseOver?: (chart: any, item: Object, event: any) => void
	onItemMouseUp?: (chart: any, item: Object, event: any) => void
	onItemTap?: (chart: any, item: Object, event: any) => void
	onLayout?: (this: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRedraw?: (this: any) => void
	onRefresh?: (this: any) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSpriteClick?: (sprite: Object, event: any) => void
	onSpriteDblClick?: (sprite: Object, event: any) => void
	onSpriteMouseDown?: (sprite: Object, event: any) => void
	onSpriteMouseMove?: (sprite: Object, event: any) => void
	onSpriteMouseOut?: (sprite: Object, event: any) => void
	onSpriteMouseOver?: (sprite: Object, event: any) => void
	onSpriteMouseUp?: (sprite: Object, event: any) => void
	onSpriteTap?: (sprite: Object, event: any) => void
	onStoreChange?: (chart: any, newStore: any, oldStore: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Chart extends React.Component<ChartProps, any> { }
export interface ChartProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	animation?: boolean | Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axes?: any | Object[] | Object
	axisLock?: boolean
	background?: Object
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	captions?: Object
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	colors?: Object[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	downloadServerUrl?: string
	draggable?: boolean | Object | any
	engine?: string
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	flipXY?: boolean
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	gradients?: Object[]
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightItem?: Object
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	innerPadding?: Object
	insetPadding?: Object | number | string
	interactions?: Object[]
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	legend?: Legend | any | boolean
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	series?: any | Object[]
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sprites?: Object[]
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any | string | Object
	style?: Object
	tabIndex?: number
	theme?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRefresh?: (this: any) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBodyResize?: (size: Object) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemClick?: (chart: any, item: Object, event: any) => void
	onItemDblClick?: (chart: any, item: Object, event: any) => void
	onItemhighlight?: (this: any, newItem: Object, oldItem: Object) => void
	onItemhighlightChange?: (this: any, newItem: Object, oldItem: Object) => void
	onItemMouseDown?: (chart: any, item: Object, event: any) => void
	onItemMouseMove?: (chart: any, item: Object, event: any) => void
	onItemMouseOut?: (chart: any, item: Object, event: any) => void
	onItemMouseOver?: (chart: any, item: Object, event: any) => void
	onItemMouseUp?: (chart: any, item: Object, event: any) => void
	onItemTap?: (chart: any, item: Object, event: any) => void
	onLayout?: (this: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRedraw?: (this: any) => void
	onRefresh?: (this: any) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSpriteClick?: (sprite: Object, event: any) => void
	onSpriteDblClick?: (sprite: Object, event: any) => void
	onSpriteMouseDown?: (sprite: Object, event: any) => void
	onSpriteMouseMove?: (sprite: Object, event: any) => void
	onSpriteMouseOut?: (sprite: Object, event: any) => void
	onSpriteMouseOver?: (sprite: Object, event: any) => void
	onSpriteMouseUp?: (sprite: Object, event: any) => void
	onSpriteTap?: (sprite: Object, event: any) => void
	onStoreChange?: (chart: any, newStore: any, oldStore: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Interaction extends React.Component<InteractionProps, any> { }
export interface InteractionProps {
	chart?: any
	enabled?: boolean
	listeners?: Object
}
declare class Legend extends React.Component<LegendProps, any> { }
export interface LegendProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	associatedData?: boolean | Object
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	deferEmptyText?: boolean
	deselectOnContainerClick?: boolean
	disabled?: boolean
	disableSelection?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	emptyItemText?: string
	emptyText?: string | boolean
	emptyTextDefaults?: Object | Component
	emptyTextProperty?: string
	enableTextSelection?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	inline?: boolean | Object
	innerCls?: string
	itemButtonMode?: boolean
	itemCls?: string
	itemId?: string
	itemRipple?: boolean | Object
	itemTpl?: string | string[] | any
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	loadingHeight?: number
	loadingText?: string | boolean
	margin?: number | string
	markDirty?: boolean
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	pressedDelay?: number
	publishes?: string | string[] | Object
	record?: any
	rect?: Object[]
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	scrollDock?: string
	scrollToTopOnRefresh?: boolean
	selectable?: Object | any
	selected?: any
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	toggleable?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerCtEvent?: string
	triggerEvent?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChildDoubleTap?: (this: DataView, location: any) => void
	onChildLongpress?: (this: DataView, location: any) => void
	onChildMouseEnter?: (this: DataView, location: any) => void
	onChildMouseLeave?: (this: DataView, location: any) => void
	onChildSingleTap?: (this: DataView, location: any) => void
	onChildTap?: (this: DataView, location: any) => void
	onChildTapHold?: (this: DataView, location: any) => void
	onChildTouchCancel?: (this: DataView, location: any) => void
	onChildTouchEnd?: (this: DataView, location: any) => void
	onChildTouchMove?: (this: DataView, location: any) => void
	onChildTouchStart?: (this: DataView, location: any) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: DataView, records: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemDoubleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemLongpress?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseEnter?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseLeave?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSingleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSwipe?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTapHold?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchCancel?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchEnd?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchMove?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchStart?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: () => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNavigate?: (this: DataView, to: any, from: any) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRefresh?: (this: DataView) => void
	onRemove?: () => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onRowSelection?: (view: DataView, selection: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: DataView, selected: any) => void
	onSelectionChange?: (view: DataView, records: any, selected: boolean, selection: any) => void
	onShow?: (sender: Component) => void
	onStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Chartnavigator extends React.Component<ChartnavigatorProps, any> { }
export interface ChartnavigatorProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	chart?: any
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	navigator?: any
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Polar extends React.Component<PolarProps, any> { }
export interface PolarProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	animation?: boolean | Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axes?: any | Object[] | Object
	axisLock?: boolean
	background?: Object
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	captions?: Object
	cardSwitchAnimation?: string | Object | boolean
	center?: Object[]
	centered?: boolean
	cls?: string | string[]
	colors?: Object[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	downloadServerUrl?: string
	draggable?: boolean | Object | any
	engine?: string
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	gradients?: Object[]
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightItem?: Object
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	innerPadding?: number
	insetPadding?: Object | number | string
	interactions?: Object[]
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	legend?: Legend | any | boolean
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	radius?: number
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	series?: any | Object[]
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sprites?: Object[]
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any | string | Object
	style?: Object
	tabIndex?: number
	theme?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRefresh?: (this: any) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBodyResize?: (size: Object) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemClick?: (chart: any, item: Object, event: any) => void
	onItemDblClick?: (chart: any, item: Object, event: any) => void
	onItemhighlight?: (this: any, newItem: Object, oldItem: Object) => void
	onItemhighlightChange?: (this: any, newItem: Object, oldItem: Object) => void
	onItemMouseDown?: (chart: any, item: Object, event: any) => void
	onItemMouseMove?: (chart: any, item: Object, event: any) => void
	onItemMouseOut?: (chart: any, item: Object, event: any) => void
	onItemMouseOver?: (chart: any, item: Object, event: any) => void
	onItemMouseUp?: (chart: any, item: Object, event: any) => void
	onItemTap?: (chart: any, item: Object, event: any) => void
	onLayout?: (this: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRedraw?: (this: any) => void
	onRefresh?: (this: any) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSpriteClick?: (sprite: Object, event: any) => void
	onSpriteDblClick?: (sprite: Object, event: any) => void
	onSpriteMouseDown?: (sprite: Object, event: any) => void
	onSpriteMouseMove?: (sprite: Object, event: any) => void
	onSpriteMouseOut?: (sprite: Object, event: any) => void
	onSpriteMouseOver?: (sprite: Object, event: any) => void
	onSpriteMouseUp?: (sprite: Object, event: any) => void
	onSpriteTap?: (sprite: Object, event: any) => void
	onStoreChange?: (chart: any, newStore: any, oldStore: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SpaceFilling extends React.Component<SpaceFillingProps, any> { }
export interface SpaceFillingProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	animation?: boolean | Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axes?: any | Object[] | Object
	axisLock?: boolean
	background?: Object
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	captions?: Object
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	colors?: Object[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	downloadServerUrl?: string
	draggable?: boolean | Object | any
	engine?: string
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	gradients?: Object[]
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightItem?: Object
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	insetPadding?: Object | number | string
	interactions?: Object[]
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	legend?: Legend | any | boolean
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	series?: any | Object[]
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sprites?: Object[]
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any | string | Object
	style?: Object
	tabIndex?: number
	theme?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRefresh?: (this: any) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBodyResize?: (size: Object) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemClick?: (chart: any, item: Object, event: any) => void
	onItemDblClick?: (chart: any, item: Object, event: any) => void
	onItemhighlight?: (this: any, newItem: Object, oldItem: Object) => void
	onItemhighlightChange?: (this: any, newItem: Object, oldItem: Object) => void
	onItemMouseDown?: (chart: any, item: Object, event: any) => void
	onItemMouseMove?: (chart: any, item: Object, event: any) => void
	onItemMouseOut?: (chart: any, item: Object, event: any) => void
	onItemMouseOver?: (chart: any, item: Object, event: any) => void
	onItemMouseUp?: (chart: any, item: Object, event: any) => void
	onItemTap?: (chart: any, item: Object, event: any) => void
	onLayout?: (this: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRedraw?: (this: any) => void
	onRefresh?: (this: any) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSpriteClick?: (sprite: Object, event: any) => void
	onSpriteDblClick?: (sprite: Object, event: any) => void
	onSpriteMouseDown?: (sprite: Object, event: any) => void
	onSpriteMouseMove?: (sprite: Object, event: any) => void
	onSpriteMouseOut?: (sprite: Object, event: any) => void
	onSpriteMouseOver?: (sprite: Object, event: any) => void
	onSpriteMouseUp?: (sprite: Object, event: any) => void
	onSpriteTap?: (sprite: Object, event: any) => void
	onStoreChange?: (chart: any, newStore: any, oldStore: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Chip extends React.Component<ChipProps, any> { }
export interface ChipProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	closable?: boolean
	closeHandler?: Function | string
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Component extends React.Component<ComponentProps, any> { }
export interface ComponentProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Container extends React.Component<ContainerProps, any> { }
export interface ContainerProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class D3_Canvas extends React.Component<D3_CanvasProps, any> { }
export interface D3_CanvasProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	componentCls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	hdpi?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	interactions?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	size?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transitions?: any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSceneResize?: (component: any, canvas: any, size: Object) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class D3_HeatMap extends React.Component<D3_HeatMapProps, any> { }
export interface D3_HeatMapProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clipScene?: boolean
	cls?: string | string[]
	colorAxis?: any
	componentCls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	interactions?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	labels?: Object | boolean
	left?: number | string
	legend?: any
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: Object | string | number
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	size?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any
	style?: string | Object
	tabIndex?: number
	tiles?: Object
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transitions?: any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	xAxis?: any
	y?: number
	yAxis?: any
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSceneResize?: (component: any, scene: any, size: Object) => void
	onSceneSetup?: (component: any, scene: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class D3_Pack extends React.Component<D3_PackProps, any> { }
export interface D3_PackProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clipScene?: boolean
	clipText?: boolean
	cls?: string | string[]
	colorAxis?: any
	componentCls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	expandEventName?: string | string[]
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hierarchyCls?: string
	html?: string | any | HTMLElement
	id?: string
	interactions?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	linkKey?: Function
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nodeChildren?: Function
	nodeClass?: Function
	nodeKey?: Function
	nodeText?: Function | string | string[]
	nodeValue?: Function | number
	noParentValue?: boolean
	padding?: Object | string | number
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	rootVisible?: boolean
	scrollable?: boolean | string | Object
	selectEventName?: string | string[]
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	size?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any
	style?: string | Object
	tabIndex?: number
	textPadding?: Object[]
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transitions?: any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLayout?: (component: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSceneResize?: (component: any, scene: any, size: Object) => void
	onSceneSetup?: (component: any, scene: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class D3_Partition extends React.Component<D3_PartitionProps, any> { }
export interface D3_PartitionProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clipScene?: boolean
	cls?: string | string[]
	colorAxis?: any
	componentCls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	expandEventName?: string | string[]
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hierarchyCls?: string
	html?: string | any | HTMLElement
	id?: string
	interactions?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	linkKey?: Function
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nodeChildren?: Function
	nodeClass?: Function
	nodeKey?: Function
	nodeText?: Function | string | string[]
	nodeValue?: Function | string | number
	noParentValue?: boolean
	padding?: Object | string | number
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	rootVisible?: boolean
	scrollable?: boolean | string | Object
	selectEventName?: string | string[]
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	size?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transitions?: any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLayout?: (component: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSceneResize?: (component: any, scene: any, size: Object) => void
	onSceneSetup?: (component: any, scene: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class D3_Sunburst extends React.Component<D3_SunburstProps, any> { }
export interface D3_SunburstProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clipScene?: boolean
	cls?: string | string[]
	colorAxis?: any
	componentCls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	expandEventName?: string | string[]
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hierarchyCls?: string
	html?: string | any | HTMLElement
	id?: string
	interactions?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	linkKey?: Function
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nodeChildren?: Function
	nodeClass?: Function
	nodeKey?: Function
	nodeText?: Function | string | string[]
	nodeValue?: Function | string | number
	noParentValue?: boolean
	padding?: Object | string | number
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	rootVisible?: boolean
	scrollable?: boolean | string | Object
	selectEventName?: string | string[]
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	size?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any
	style?: string | Object
	tabIndex?: number
	textPadding?: Object[]
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transitions?: any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	zoomParentDotRadius?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLayout?: (component: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSceneResize?: (component: any, scene: any, size: Object) => void
	onSceneSetup?: (component: any, scene: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class D3_Tree extends React.Component<D3_TreeProps, any> { }
export interface D3_TreeProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clipScene?: boolean
	cls?: string | string[]
	colorAxis?: any
	componentCls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	expandEventName?: string | string[]
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hierarchyCls?: string
	html?: string | any | HTMLElement
	id?: string
	interactions?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	linkKey?: Function
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nodeChildren?: Function
	nodeClass?: Function
	nodeKey?: Function
	nodeRadius?: number
	nodeSize?: number[]
	nodeText?: Function | string | string[]
	nodeValue?: Function | string | number
	noParentValue?: boolean
	padding?: Object | string | number
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	rootVisible?: boolean
	scrollable?: boolean | string | Object
	selectEventName?: string | string[]
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	size?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transitions?: any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLayout?: (component: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSceneResize?: (component: any, scene: any, size: Object) => void
	onSceneSetup?: (component: any, scene: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class D3_Horizontal_Tree extends React.Component<D3_Horizontal_TreeProps, any> { }
export interface D3_Horizontal_TreeProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clipScene?: boolean
	cls?: string | string[]
	colorAxis?: any
	componentCls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	expandEventName?: string | string[]
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hierarchyCls?: string
	html?: string | any | HTMLElement
	id?: string
	interactions?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	linkKey?: Function
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nodeChildren?: Function
	nodeClass?: Function
	nodeKey?: Function
	nodeRadius?: number
	nodeSize?: number[]
	nodeText?: Function | string | string[]
	nodeValue?: Function | string | number
	noParentValue?: boolean
	padding?: Object | string | number
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	rootVisible?: boolean
	scrollable?: boolean | string | Object
	selectEventName?: string | string[]
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	size?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transitions?: any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLayout?: (component: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSceneResize?: (component: any, scene: any, size: Object) => void
	onSceneSetup?: (component: any, scene: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class D3_TreeMap extends React.Component<D3_TreeMapProps, any> { }
export interface D3_TreeMapProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	busyLayoutText?: string
	centered?: boolean
	clipScene?: boolean
	cls?: string | string[]
	colorAxis?: any
	componentCls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	expandEventName?: string | string[]
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hierarchyCls?: string
	html?: string | any | HTMLElement
	id?: string
	interactions?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	leafTile?: Object
	left?: number | string
	linkKey?: Function
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nodeChildren?: Function
	nodeClass?: Function
	nodeKey?: Function
	nodeText?: Function | string | string[]
	nodeValue?: Function | string | number
	noParentValue?: boolean
	padding?: Object | string | number
	parentTile?: Object
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	rootVisible?: boolean
	scaleLabels?: boolean
	scrollable?: boolean | string | Object
	selectEventName?: string | string[]
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	size?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any
	style?: string | Object
	tabIndex?: number
	tiling?: Function
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transitions?: any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLayout?: (component: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSceneResize?: (component: any, scene: any, size: Object) => void
	onSceneSetup?: (component: any, scene: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class D3_SVG extends React.Component<D3_SVGProps, any> { }
export interface D3_SVGProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clipScene?: boolean
	cls?: string | string[]
	componentCls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	interactions?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: Object | string | number
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	size?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transitions?: any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSceneResize?: (component: any, scene: any, size: Object) => void
	onSceneSetup?: (component: any, scene: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class D3 extends React.Component<D3Props, any> { }
export interface D3Props {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clipScene?: boolean
	cls?: string | string[]
	componentCls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	interactions?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: Object | string | number
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	size?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transitions?: any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSceneResize?: (component: any, scene: any, size: Object) => void
	onSceneSetup?: (component: any, scene: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class BoundList extends React.Component<BoundListProps, any> { }
export interface BoundListProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	associatedData?: boolean | Object
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	bufferSize?: number
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: any
	deferEmptyText?: boolean
	deselectOnContainerClick?: boolean
	disabled?: boolean
	disableSelection?: boolean
	disclosureProperty?: string
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	emptyItemText?: string
	emptyText?: string | boolean
	emptyTextDefaults?: Object | Component
	emptyTextProperty?: string
	enableTextSelection?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	grouped?: boolean
	groupFooter?: Object | ItemHeader
	groupHeader?: Object | ItemHeader
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	indexBar?: boolean | Object | IndexBar
	infinite?: boolean
	inline?: boolean | Object
	innerCls?: string
	itemButtonMode?: boolean
	itemCls?: string
	itemConfig?: Object | Component
	itemContentCls?: string
	itemDataMap?: Object
	itemId?: string
	itemInnerCls?: string
	itemRipple?: boolean | Object
	itemTpl?: string | string[] | any
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	loadingHeight?: number
	loadingText?: string | boolean
	margin?: number | string
	markDirty?: boolean
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxItemCache?: number
	maxWidth?: number | string
	minHeight?: number | string
	minimumBufferDistance?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	onItemDisclosure?: boolean | Function | string | Object
	padding?: number | string
	pinFooters?: boolean
	pinHeaders?: boolean
	pinnedFooter?: Object
	pinnedHeader?: Object
	plugins?: Object[] | any | Object
	pressedDelay?: number
	preventSelectionOnDisclose?: boolean
	preventSelectionOnTool?: boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	rowLines?: boolean
	scrollable?: boolean | string | Object
	scrollDock?: string
	scrollToTopOnRefresh?: boolean
	selectable?: Object | any
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store: any | Object
	striped?: boolean
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerCtEvent?: string
	triggerEvent?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	useSimpleItems?: boolean
	variableHeights?: boolean
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChildDoubleTap?: (this: List, location: any) => void
	onChildLongpress?: (this: List, location: any) => void
	onChildMouseEnter?: (this: List, location: any) => void
	onChildMouseLeave?: (this: List, location: any) => void
	onChildSingleTap?: (this: List, location: any) => void
	onChildTap?: (this: List, location: any) => void
	onChildTapHold?: (this: List, location: any) => void
	onChildTouchCancel?: (this: List, location: any) => void
	onChildTouchEnd?: (this: List, location: any) => void
	onChildTouchMove?: (this: List, location: any) => void
	onChildTouchStart?: (this: List, location: any) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: DataView, records: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDisclose?: (list: List, record: any, target: HTMLElement, index: number, event: any) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemAction?: (this: List, index: number, record: any, action: string) => void
	onItemDoubleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemLongpress?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseEnter?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseLeave?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSingleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSwipe?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTapHold?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchCancel?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchEnd?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchMove?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchStart?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: () => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNavigate?: (this: DataView, to: any, from: any) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRefresh?: (this: DataView) => void
	onRemove?: () => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: DataView, selected: any) => void
	onShow?: (sender: Component) => void
	onStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ChipView extends React.Component<ChipViewProps, any> { }
export interface ChipViewProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	associatedData?: boolean | Object
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closableField?: string
	closeHandler?: Function | string
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	deferEmptyText?: boolean
	deselectOnContainerClick?: boolean
	disabled?: boolean
	disableSelection?: boolean
	displayed?: boolean
	displayField?: string
	displayTpl?: string | string[] | any
	docked?: string
	draggable?: boolean | Object | any
	emptyItemText?: string
	emptyText?: string | boolean
	emptyTextDefaults?: Object | Component
	emptyTextProperty?: string
	enableTextSelection?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	iconClsField?: string
	iconField?: string
	id?: string
	inactiveChildTabIndex?: number
	inline?: boolean | Object
	innerCls?: string
	itemButtonMode?: boolean
	itemCls?: string
	itemId?: string
	itemRipple?: boolean | Object
	itemTpl?: any
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	loadingHeight?: number
	loadingText?: string | boolean
	margin?: number | string
	markDirty?: boolean
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	pressedDelay?: number
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	scrollDock?: string
	scrollToTopOnRefresh?: boolean
	selectable?: Object | any
	selected?: any
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store: any | Object
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerCtEvent?: string
	triggerEvent?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChildDoubleTap?: (this: DataView, location: any) => void
	onChildLongpress?: (this: DataView, location: any) => void
	onChildMouseEnter?: (this: DataView, location: any) => void
	onChildMouseLeave?: (this: DataView, location: any) => void
	onChildSingleTap?: (this: DataView, location: any) => void
	onChildTap?: (this: DataView, location: any) => void
	onChildTapHold?: (this: DataView, location: any) => void
	onChildTouchCancel?: (this: DataView, location: any) => void
	onChildTouchEnd?: (this: DataView, location: any) => void
	onChildTouchMove?: (this: DataView, location: any) => void
	onChildTouchStart?: (this: DataView, location: any) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: DataView, records: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemDoubleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemLongpress?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseEnter?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseLeave?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSingleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSwipe?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTapHold?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchCancel?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchEnd?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchMove?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchStart?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: () => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNavigate?: (this: DataView, to: any, from: any) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRefresh?: (this: DataView) => void
	onRemove?: () => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onRowSelection?: (view: DataView, selection: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: DataView, selected: any) => void
	onSelectionChange?: (view: DataView, records: any, selected: boolean, selection: any) => void
	onShow?: (sender: Component) => void
	onStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ComponentDataView extends React.Component<ComponentDataViewProps, any> { }
export interface ComponentDataViewProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	associatedData?: boolean | Object
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: any
	deferEmptyText?: boolean
	deselectOnContainerClick?: boolean
	disabled?: boolean
	disableSelection?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	emptyItemText?: string
	emptyText?: string | boolean
	emptyTextDefaults?: Object | Component
	emptyTextProperty?: string
	enableTextSelection?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	inline?: boolean | Object
	innerCls?: string
	itemButtonMode?: boolean
	itemCls?: string
	itemConfig?: Object | Component
	itemContentCls?: string
	itemDataMap?: Object
	itemId?: string
	itemInnerCls?: string
	itemRipple?: boolean | Object
	itemTpl?: string | string[] | any
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	loadingHeight?: number
	loadingText?: string | boolean
	margin?: number | string
	markDirty?: boolean
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxItemCache?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	pressedDelay?: number
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	scrollDock?: string
	scrollToTopOnRefresh?: boolean
	selectable?: Object | any
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store: any | Object
	striped?: boolean
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerCtEvent?: string
	triggerEvent?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChildDoubleTap?: (this: any, location: any) => void
	onChildLongpress?: (this: any, location: any) => void
	onChildMouseEnter?: (this: any, location: any) => void
	onChildMouseLeave?: (this: any, location: any) => void
	onChildSingleTap?: (this: any, location: any) => void
	onChildTap?: (this: any, location: any) => void
	onChildTapHold?: (this: any, location: any) => void
	onChildTouchCancel?: (this: any, location: any) => void
	onChildTouchEnd?: (this: any, location: any) => void
	onChildTouchMove?: (this: any, location: any) => void
	onChildTouchStart?: (this: any, location: any) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: DataView, records: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemDoubleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemLongpress?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseEnter?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseLeave?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSingleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSwipe?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTapHold?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchCancel?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchEnd?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchMove?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchStart?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: () => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNavigate?: (this: DataView, to: any, from: any) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRefresh?: (this: DataView) => void
	onRemove?: () => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: DataView, selected: any) => void
	onShow?: (sender: Component) => void
	onStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class DataItem extends React.Component<DataItemProps, any> { }
export interface DataItemProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataMap?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	recordIndex?: number
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (dataItem: DataItem, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class DataView extends React.Component<DataViewProps, any> { }
export interface DataViewProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	associatedData?: boolean | Object
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	deferEmptyText?: boolean
	deselectOnContainerClick?: boolean
	disabled?: boolean
	disableSelection?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	emptyItemText?: string
	emptyText?: string | boolean
	emptyTextDefaults?: Object | Component
	emptyTextProperty?: string
	enableTextSelection?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	inline?: boolean | Object
	innerCls?: string
	itemButtonMode?: boolean
	itemCls?: string
	itemId?: string
	itemRipple?: boolean | Object
	itemTpl?: string | string[] | any
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	loadingHeight?: number
	loadingText?: string | boolean
	margin?: number | string
	markDirty?: boolean
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	pressedDelay?: number
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	scrollDock?: string
	scrollToTopOnRefresh?: boolean
	selectable?: Object | any
	selected?: any
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store: any | Object
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerCtEvent?: string
	triggerEvent?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChildDoubleTap?: (this: DataView, location: any) => void
	onChildLongpress?: (this: DataView, location: any) => void
	onChildMouseEnter?: (this: DataView, location: any) => void
	onChildMouseLeave?: (this: DataView, location: any) => void
	onChildSingleTap?: (this: DataView, location: any) => void
	onChildTap?: (this: DataView, location: any) => void
	onChildTapHold?: (this: DataView, location: any) => void
	onChildTouchCancel?: (this: DataView, location: any) => void
	onChildTouchEnd?: (this: DataView, location: any) => void
	onChildTouchMove?: (this: DataView, location: any) => void
	onChildTouchStart?: (this: DataView, location: any) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: DataView, records: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemDoubleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemLongpress?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseEnter?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseLeave?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSingleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSwipe?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTapHold?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchCancel?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchEnd?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchMove?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchStart?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: () => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNavigate?: (this: DataView, to: any, from: any) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRefresh?: (this: DataView) => void
	onRemove?: () => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onRowSelection?: (view: DataView, selection: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: DataView, selected: any) => void
	onSelectionChange?: (view: DataView, records: any, selected: boolean, selection: any) => void
	onShow?: (sender: Component) => void
	onStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class EmptyText extends React.Component<EmptyTextProps, any> { }
export interface EmptyTextProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class IndexBar extends React.Component<IndexBarProps, any> { }
export interface IndexBarProps {
	alwaysOnTop?: boolean | number
	animation?: boolean | Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoHide?: boolean | string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	direction?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	dynamic?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	indicator?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	letters?: string | string[]
	listeners?: Object
	listPrefix?: string
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDirectionChange?: (sender: IndexBar, value: string, oldValue: string) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDirectionChange?: (sender: IndexBar, value: string, oldValue: string) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onIndex?: (this: IndexBar, html: string, target: any) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ItemHeader extends React.Component<ItemHeaderProps, any> { }
export interface ItemHeaderProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	group?: any
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class List extends React.Component<ListProps, any> { }
export interface ListProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	associatedData?: boolean | Object
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	bufferSize?: number
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: any
	deferEmptyText?: boolean
	deselectOnContainerClick?: boolean
	disabled?: boolean
	disableSelection?: boolean
	disclosureProperty?: string
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	emptyItemText?: string
	emptyText?: string | boolean
	emptyTextDefaults?: Object | Component
	emptyTextProperty?: string
	enableTextSelection?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	grouped?: boolean
	groupFooter?: Object | ItemHeader
	groupHeader?: Object | ItemHeader
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	indexBar?: boolean | Object | IndexBar
	infinite?: boolean
	inline?: boolean | Object
	innerCls?: string
	itemButtonMode?: boolean
	itemCls?: string
	itemConfig?: Object | Component
	itemContentCls?: string
	itemDataMap?: Object
	itemId?: string
	itemInnerCls?: string
	itemRipple?: boolean | Object
	itemTpl?: string | string[] | any
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	loadingHeight?: number
	loadingText?: string | boolean
	margin?: number | string
	markDirty?: boolean
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxItemCache?: number
	maxWidth?: number | string
	minHeight?: number | string
	minimumBufferDistance?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	onItemDisclosure?: boolean | Function | string | Object
	padding?: number | string
	pinFooters?: boolean
	pinHeaders?: boolean
	pinnedFooter?: Object
	pinnedHeader?: Object
	plugins?: Object[] | any | Object
	pressedDelay?: number
	preventSelectionOnDisclose?: boolean
	preventSelectionOnTool?: boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	rowLines?: boolean
	scrollable?: boolean | string | Object
	scrollDock?: string
	scrollToTopOnRefresh?: boolean
	selectable?: Object | any
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store: any | Object
	striped?: boolean
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerCtEvent?: string
	triggerEvent?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	useSimpleItems?: boolean
	variableHeights?: boolean
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChildDoubleTap?: (this: List, location: any) => void
	onChildLongpress?: (this: List, location: any) => void
	onChildMouseEnter?: (this: List, location: any) => void
	onChildMouseLeave?: (this: List, location: any) => void
	onChildSingleTap?: (this: List, location: any) => void
	onChildTap?: (this: List, location: any) => void
	onChildTapHold?: (this: List, location: any) => void
	onChildTouchCancel?: (this: List, location: any) => void
	onChildTouchEnd?: (this: List, location: any) => void
	onChildTouchMove?: (this: List, location: any) => void
	onChildTouchStart?: (this: List, location: any) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: DataView, records: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDisclose?: (list: List, record: any, target: HTMLElement, index: number, event: any) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemAction?: (this: List, index: number, record: any, action: string) => void
	onItemDoubleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemLongpress?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseEnter?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseLeave?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSingleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSwipe?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTapHold?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchCancel?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchEnd?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchMove?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchStart?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: () => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNavigate?: (this: DataView, to: any, from: any) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRefresh?: (this: DataView) => void
	onRemove?: () => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: DataView, selected: any) => void
	onShow?: (sender: Component) => void
	onStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ListItem extends React.Component<ListItemProps, any> { }
export interface ListItemProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataMap?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	recordIndex?: number
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (dataItem: DataItem, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ListSwiperItem extends React.Component<ListSwiperItemProps, any> { }
export interface ListSwiperItemProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	undo?: Object
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ListSwiperstepper extends React.Component<ListSwiperstepperProps, any> { }
export interface ListSwiperstepperProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	animation?: boolean | Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	undo?: Object
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class NestedList extends React.Component<NestedListProps, any> { }
export interface NestedListProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowDeselect?: boolean
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	backButton?: Object
	backText?: string
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	detailCard?: Component
	detailContainer?: Container
	disabled?: boolean
	displayed?: boolean
	displayField?: string
	docked?: string
	draggable?: boolean | Object | any
	emptyText?: string
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: string
	left?: number | string
	listConfig?: Object
	listeners?: Object
	loadingText?: string
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	onItemDisclosure?: boolean | Function
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any | string
	style?: string | Object
	tabIndex?: number
	title?: string
	toFrontOnShow?: boolean
	toolbar?: Toolbar | Object | boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	updateTitleText?: boolean
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	useTitleAsBackText?: boolean
	useToolbar?: boolean
	variableHeights?: boolean
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBack?: (this: NestedList, node: HTMLElement, lastActiveList: List, detailCardActive: boolean) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeload?: (this: NestedList, store: any, operation: any) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeSelectionChange?: (this: NestedList, list: List, node: HTMLElement, selections: Object[]) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onContainerTap?: (this: NestedList, list: List, e: any) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: NestedList, list: List, selections: Object[]) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemDoubleTap?: (this: NestedList, list: List, index: number, target: any, record: any, e: any) => void
	onItemTap?: (this: NestedList, list: List, index: number, target: any, record: any, e: any) => void
	onLeafItemTap?: (this: NestedList, list: List, index: number, target: any, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onListChange?: (this: NestedList, listitem: Object) => void
	onLoad?: (this: NestedList, store: any, records: any, successful: boolean, operation: any) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: NestedList, list: List, selections: Object[]) => void
	onSelectionChange?: (this: NestedList, list: List, selections: Object[]) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PullRefreshBar extends React.Component<PullRefreshBarProps, any> { }
export interface PullRefreshBarProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	lastUpdatedDateFormat?: string
	lastUpdatedText?: string
	left?: number | string
	listeners?: Object
	loadedText?: string
	loadingText?: string
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	mode?: string
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	pullText?: string
	record?: any
	reference?: string
	relative?: boolean
	releaseText?: string
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PullRefreshspinner extends React.Component<PullRefreshspinnerProps, any> { }
export interface PullRefreshspinnerProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SimpleListItem extends React.Component<SimpleListItemProps, any> { }
export interface SimpleListItemProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	recordIndex?: number
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Dialog extends React.Component<DialogProps, any> { }
export interface DialogProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	constrainDrag?: boolean | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	dismissAction?: string | string[]
	dismissHandler?: string | Function
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maskTapHandler?: string | Function
	maxHeight?: number | string
	maximizable?: boolean
	maximizeAnimation?: Object
	maximized?: boolean
	maximizeProxy?: Object | Dialog
	maximizeTool?: Object | Tool
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	restoreAnimation?: Object
	restoreTool?: Object | Tool
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaximize?: (dialog: Dialog) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRestore?: (dialog: Dialog) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaximize?: (dialog: Dialog) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRestore?: (dialog: Dialog) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Window extends React.Component<WindowProps, any> { }
export interface WindowProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	constrainDrag?: boolean | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	dismissAction?: string | string[]
	dismissHandler?: string | Function
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maskTapHandler?: string | Function
	maxHeight?: number | string
	maximizable?: boolean
	maximizeAnimation?: Object
	maximized?: boolean
	maximizeProxy?: Object | Dialog
	maximizeTool?: Object | Tool
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	restoreAnimation?: Object
	restoreTool?: Object | Tool
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaximize?: (dialog: Dialog) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRestore?: (dialog: Dialog) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaximize?: (dialog: Dialog) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRestore?: (dialog: Dialog) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Draw extends React.Component<DrawProps, any> { }
export interface DrawProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	downloadServerUrl?: string
	draggable?: boolean | Object | any
	engine?: string
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	gradients?: Object[]
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizeHandler?: Function
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sprites?: Object[]
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBodyResize?: (size: Object) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSpriteClick?: (sprite: Object, event: any) => void
	onSpriteDblClick?: (sprite: Object, event: any) => void
	onSpriteMouseDown?: (sprite: Object, event: any) => void
	onSpriteMouseMove?: (sprite: Object, event: any) => void
	onSpriteMouseOut?: (sprite: Object, event: any) => void
	onSpriteMouseOver?: (sprite: Object, event: any) => void
	onSpriteMouseUp?: (sprite: Object, event: any) => void
	onSpriteTap?: (sprite: Object, event: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Surface extends React.Component<SurfaceProps, any> { }
export interface SurfaceProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	background?: Object
	bind?: Object | string
	border?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	dirty?: boolean
	disabled?: boolean
	flex?: number | string | Object
	flipRtlText?: boolean
	floated?: boolean
	focusCls?: string
	height?: number | string
	hidden?: boolean
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rect?: Object[]
	reference?: string
	relative?: boolean
	renderTo?: any
	ripple?: boolean | Object | string
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Editor extends React.Component<EditorProps, any> { }
export interface EditorProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	alignment?: string
	allowBlur?: boolean
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cancelOnClear?: boolean
	cancelOnEsc?: boolean
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	completeOnEnter?: boolean
	constrain?: boolean
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	field?: Object
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideEl?: boolean
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignoreNoChange?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	matchFont?: boolean
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	offset?: number[]
	padding?: number | string
	parentEl?: string | HTMLElement | any
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	revertInvalid?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean | string
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	swallowKeys?: boolean
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	updateEl?: boolean
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeComplete?: (this: Editor, value: Object, startValue: Object) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStartEdit?: (this: Editor, boundEl: any, value: Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCancelEdit?: (this: Editor, value: Object, startValue: Object) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onComplete?: (this: Editor, value: Object, startValue: Object) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSpecialKey?: (this: Editor, field: any, event: any) => void
	onStartEdit?: (this: Editor, boundEl: any, value: Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Checkbox extends React.Component<CheckboxProps, any> { }
export interface CheckboxProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	boxLabel?: string
	boxLabelAlign?: string
	centered?: boolean
	checked?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Checkbox, newValue: boolean, oldValue: boolean) => void
	onCheck?: (this: Checkbox) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUnCheck?: (this: Checkbox) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class CheckBoxField extends React.Component<CheckBoxFieldProps, any> { }
export interface CheckBoxFieldProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	boxLabel?: string
	boxLabelAlign?: string
	centered?: boolean
	checked?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Checkbox, newValue: boolean, oldValue: boolean) => void
	onCheck?: (this: Checkbox) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUnCheck?: (this: Checkbox) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ComboBox extends React.Component<ComboBoxProps, any> { }
export interface ComboBoxProps {
	alignTarget?: string
	allQuery?: string
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	anyMatch?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoFocus?: boolean
	autoFocusLast?: boolean
	autoHideInputMask?: boolean
	autoLoadOnValue?: boolean
	autoSelect?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	caseSensitive?: boolean
	centered?: boolean
	chipView?: any
	clearable?: boolean
	cls?: string | string[]
	collapseOnSelect?: boolean
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	delimiter?: string
	disabled?: boolean
	displayed?: boolean
	displayField?: string | number
	displayTpl?: string | string[] | any
	docked?: string
	draggable?: boolean | Object | any
	edgePicker?: Object
	editable?: boolean
	enableRegEx?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	floatedPicker?: Object
	floatedPickerAlign?: string
	focusCls?: string
	forceSelection?: boolean
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hiddenName?: string
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hideTrigger?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemCls?: string
	itemId?: string
	itemTpl?: string | any
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	matchFieldWidth?: boolean
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minChars?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multiSelect?: boolean
	name?: string
	nameable?: boolean
	options?: Object[]
	padding?: number | string
	pattern?: string
	picker?: string | Object
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	primaryFilter?: Function | string | Object | any
	publishes?: string | string[] | Object
	queryCaching?: boolean
	queryDelay?: number
	queryMode?: string
	queryParam?: string
	readOnly?: boolean
	record?: any
	recordCreator?: Function | string
	recordCreatorScope?: Object
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selection?: any
	selectOnTab?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any | Object | string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerAction?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	typeAhead?: boolean
	typeAheadDelay?: number
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	valueField?: string | number
	valueNotFoundText?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforePickerCreate?: (this: ComboBox, newValue: Object) => void
	onBeforeQuery?: (queryPlan: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: ComboBox, newValue: any, oldValue: any) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onCollapse?: (field: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onExpand?: (field: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPickerCreate?: (this: ComboBox, picker: List | Component) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: ComboBox, newValue: any) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ComboBoxField extends React.Component<ComboBoxFieldProps, any> { }
export interface ComboBoxFieldProps {
	alignTarget?: string
	allQuery?: string
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	anyMatch?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoFocus?: boolean
	autoFocusLast?: boolean
	autoHideInputMask?: boolean
	autoLoadOnValue?: boolean
	autoSelect?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	caseSensitive?: boolean
	centered?: boolean
	chipView?: any
	clearable?: boolean
	cls?: string | string[]
	collapseOnSelect?: boolean
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	delimiter?: string
	disabled?: boolean
	displayed?: boolean
	displayField?: string | number
	displayTpl?: string | string[] | any
	docked?: string
	draggable?: boolean | Object | any
	edgePicker?: Object
	editable?: boolean
	enableRegEx?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	floatedPicker?: Object
	floatedPickerAlign?: string
	focusCls?: string
	forceSelection?: boolean
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hiddenName?: string
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hideTrigger?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemCls?: string
	itemId?: string
	itemTpl?: string | any
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	matchFieldWidth?: boolean
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minChars?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multiSelect?: boolean
	name?: string
	nameable?: boolean
	options?: Object[]
	padding?: number | string
	pattern?: string
	picker?: string | Object
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	primaryFilter?: Function | string | Object | any
	publishes?: string | string[] | Object
	queryCaching?: boolean
	queryDelay?: number
	queryMode?: string
	queryParam?: string
	readOnly?: boolean
	record?: any
	recordCreator?: Function | string
	recordCreatorScope?: Object
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selection?: any
	selectOnTab?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any | Object | string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerAction?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	typeAhead?: boolean
	typeAheadDelay?: number
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	valueField?: string | number
	valueNotFoundText?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforePickerCreate?: (this: ComboBox, newValue: Object) => void
	onBeforeQuery?: (queryPlan: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: ComboBox, newValue: any, oldValue: any) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onCollapse?: (field: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onExpand?: (field: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPickerCreate?: (this: ComboBox, picker: List | Component) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: ComboBox, newValue: any) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ContainerField extends React.Component<ContainerFieldProps, any> { }
export interface ContainerFieldProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	autoSize?: any
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	container?: Container
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	error?: any
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class FieldContainer extends React.Component<FieldContainerProps, any> { }
export interface FieldContainerProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	autoSize?: any
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	container?: Container
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	error?: any
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class DateField extends React.Component<DateFieldProps, any> { }
export interface DateFieldProps {
	alignTarget?: string
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	dateFormat?: string
	defaultListenerScope?: boolean
	destroyPickerOnHide?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	edgePicker?: Object
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	floatedPicker?: Object
	floatedPickerAlign?: string
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hideTrigger?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	matchFieldWidth?: boolean
	maxDate?: any | string
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minDate?: any | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	picker?: string | Object
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: Object | any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: any, newDate: any, oldDate: any) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onCollapse?: (field: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onExpand?: (field: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class DatePickerField extends React.Component<DatePickerFieldProps, any> { }
export interface DatePickerFieldProps {
	alignTarget?: string
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	dateFormat?: string
	defaultListenerScope?: boolean
	destroyPickerOnHide?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	edgePicker?: Object
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	floatedPicker?: Object
	floatedPickerAlign?: string
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hideTrigger?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	matchFieldWidth?: boolean
	maxDate?: any | string
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minDate?: any | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	picker?: string | Object
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: Object | any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: any, newDate: any, oldDate: any) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onCollapse?: (field: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onExpand?: (field: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class DatePickerNativeField extends React.Component<DatePickerNativeFieldProps, any> { }
export interface DatePickerNativeFieldProps {
	alignTarget?: string
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	dateFormat?: string
	defaultListenerScope?: boolean
	destroyPickerOnHide?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	edgePicker?: Object
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	floatedPicker?: Object
	floatedPickerAlign?: string
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hideTrigger?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	matchFieldWidth?: boolean
	maxDate?: any | string
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minDate?: any | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	picker?: string | Object
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: Object | any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: any, newDate: any, oldDate: any) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onCollapse?: (field: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onExpand?: (field: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class DisplayField extends React.Component<DisplayFieldProps, any> { }
export interface DisplayFieldProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	encodeHtml?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class EmailField extends React.Component<EmailFieldProps, any> { }
export interface EmailFieldProps {
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Field extends React.Component<FieldProps, any> { }
export interface FieldProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class FileField extends React.Component<FileFieldProps, any> { }
export interface FileFieldProps {
	accept?: string
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	capture?: string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multiple?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class FileButton extends React.Component<FileButtonProps, any> { }
export interface FileButtonProps {
	accept?: string
	allowDepress?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	arrow?: boolean
	arrowAlign?: string
	autoEvent?: string
	axisLock?: boolean
	badgeText?: string
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	buttonType?: string
	capture?: string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enableToggle?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	handler?: Function
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | string | Object
	menuAlign?: string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multiple?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	pressed?: boolean
	pressedDelay?: number | boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	stretchMenu?: boolean
	style?: string | Object
	tabIndex?: number
	text?: string
	textAlign?: string
	toFrontOnShow?: boolean
	toggleHandler?: Function
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforePressedChange?: (sender: Button, value: boolean, oldValue: boolean) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: FileButton, newValue: string, oldValue: string) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onPressedChange?: (sender: Button, value: boolean, oldValue: boolean) => void
	onRelease?: (this: Button, e: any) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onTap?: (this: Button, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class HiddenField extends React.Component<HiddenFieldProps, any> { }
export interface HiddenFieldProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputType?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class InputField extends React.Component<InputFieldProps, any> { }
export interface InputFieldProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class NumberField extends React.Component<NumberFieldProps, any> { }
export interface NumberFieldProps {
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	decimals?: number
	decimalsText?: string
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxLength?: number
	maxValue?: number
	maxValueText?: string
	maxWidth?: number | string
	minHeight?: number | string
	minValue?: number
	minValueText?: string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	trim?: boolean
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class FieldPanel extends React.Component<FieldPanelProps, any> { }
export interface FieldPanelProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	api?: Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	baseParams?: Object
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	fieldSeparators?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	inputBorders?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	paramOrder?: string | string[]
	paramsAsHash?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	timeout?: number
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	url?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onException?: (this: any, result: Object) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PasswordField extends React.Component<PasswordFieldProps, any> { }
export interface PasswordFieldProps {
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	revealable?: boolean
	revealed?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PickerField extends React.Component<PickerFieldProps, any> { }
export interface PickerFieldProps {
	alignTarget?: string
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	edgePicker?: Object
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	floatedPicker?: Object
	floatedPickerAlign?: string
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hideTrigger?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	matchFieldWidth?: boolean
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	picker?: string | Object
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onCollapse?: (field: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onExpand?: (field: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Radio extends React.Component<RadioProps, any> { }
export interface RadioProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	boxLabel?: string
	boxLabelAlign?: string
	centered?: boolean
	checked?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Checkbox, newValue: boolean, oldValue: boolean) => void
	onCheck?: (this: Checkbox) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUnCheck?: (this: Checkbox) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class RadioField extends React.Component<RadioFieldProps, any> { }
export interface RadioFieldProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	boxLabel?: string
	boxLabelAlign?: string
	centered?: boolean
	checked?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Checkbox, newValue: boolean, oldValue: boolean) => void
	onCheck?: (this: Checkbox) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUnCheck?: (this: Checkbox) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SearchField extends React.Component<SearchFieldProps, any> { }
export interface SearchFieldProps {
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SelectField extends React.Component<SelectFieldProps, any> { }
export interface SelectFieldProps {
	alignTarget?: string
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoFocus?: boolean
	autoFocusLast?: boolean
	autoHideInputMask?: boolean
	autoLoadOnValue?: boolean
	autoSelect?: boolean | string
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	chipView?: any
	clearable?: boolean
	cls?: string | string[]
	collapseOnSelect?: boolean
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	delimiter?: string
	disabled?: boolean
	displayed?: boolean
	displayField?: string | number
	displayTpl?: string | string[] | any
	docked?: string
	draggable?: boolean | Object | any
	edgePicker?: Object
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	floatedPicker?: Object
	floatedPickerAlign?: string
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hiddenName?: string
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hideTrigger?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemCls?: string
	itemId?: string
	itemTpl?: string | any
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	matchFieldWidth?: boolean
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multiSelect?: boolean
	name?: string
	nameable?: boolean
	options?: Object[]
	padding?: number | string
	pattern?: string
	picker?: string | Object
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	recordCreator?: Function | string
	recordCreatorScope?: Object
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selection?: any
	selectOnTab?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any | Object | string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	valueField?: string | number
	valueNotFoundText?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: any, newValue: any, oldValue: any) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onCollapse?: (field: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onExpand?: (field: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: any, newValue: any) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SingleSliderField extends React.Component<SingleSliderFieldProps, any> { }
export interface SingleSliderFieldProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	boxLabel?: string
	boxLabelAlign?: string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	increment?: number
	inline?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	liveUpdate?: boolean
	margin?: number | string
	maxHeight?: number | string
	maxValue?: number
	maxWidth?: number | string
	minHeight?: number | string
	minValue?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: any
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: number | number[]
	values?: number | number[]
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (me: any, newValue: number, oldValue: number) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrag?: (this: any, sl: Slider, thumb: Thumb, e: any) => void
	onDragChange?: (me: any, sl: Slider, newValue: number, oldValue: number) => void
	onDragEnd?: (this: any, sl: Slider, thumb: Thumb, value: Object[], e: any) => void
	onDragStart?: (this: any, sl: Slider, thumb: Thumb, value: Object[], e: any) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SliderField extends React.Component<SliderFieldProps, any> { }
export interface SliderFieldProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	boxLabel?: string
	boxLabelAlign?: string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	increment?: number
	inline?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	liveUpdate?: boolean
	margin?: number | string
	maxHeight?: number | string
	maxValue?: number
	maxWidth?: number | string
	minHeight?: number | string
	minValue?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: any
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: number | number[]
	values?: number | number[]
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (me: any, newValue: number[], oldValue: number[]) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrag?: (this: any, sl: Slider, thumb: Thumb, e: any) => void
	onDragChange?: (me: any, sl: Slider, thumb: Thumb, newValue: number[], oldValue: number[]) => void
	onDragEnd?: (this: any, sl: Slider, thumb: Thumb, value: Object[], e: any) => void
	onDragStart?: (this: any, sl: Slider, thumb: Thumb, value: Object[], e: any) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SpinnerField extends React.Component<SpinnerFieldProps, any> { }
export interface SpinnerFieldProps {
	accelerateOnTapHold?: boolean
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	cycle?: boolean
	data?: Object
	decimals?: number
	decimalsText?: string
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	groupButtons?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxLength?: number
	maxValue?: number
	maxValueText?: string
	maxWidth?: number | string
	minHeight?: number | string
	minValue?: number
	minValueText?: string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	stepValue?: number
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	trim?: boolean
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSpin?: (this: any, value: number, direction: string) => void
	onSpinDown?: (this: any, value: number) => void
	onSpinUp?: (this: any, value: number) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: () => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TextField extends React.Component<TextFieldProps, any> { }
export interface TextFieldProps {
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TextAreaField extends React.Component<TextAreaFieldProps, any> { }
export interface TextAreaFieldProps {
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxLength?: number
	maxRows?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TimeField extends React.Component<TimeFieldProps, any> { }
export interface TimeFieldProps {
	alignTarget?: string
	altFormats?: string | string[]
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	edgePicker?: Object
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	floatedPicker?: Object
	floatedPickerAlign?: string
	focusCls?: string
	format?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hideTrigger?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	matchFieldWidth?: boolean
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	picker?: string | Object
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onCollapse?: (field: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onExpand?: (field: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ToggleField extends React.Component<ToggleFieldProps, any> { }
export interface ToggleFieldProps {
	activeLabel?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoFitErrors?: boolean
	axisLock?: boolean
	bind?: Object | string
	bodyAlign?: string
	border?: boolean
	bottom?: number | string
	boxLabel?: string
	boxLabelAlign?: string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveLabel?: string
	increment?: number
	inline?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	liveUpdate?: boolean
	margin?: number | string
	maxHeight?: number | string
	maxValue?: number
	maxWidth?: number | string
	minHeight?: number | string
	minValue?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: any
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	slider?: any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: number | number[]
	values?: number | number[]
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: any, newValue: number, oldValue: number) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrag?: () => void
	onDragChange?: (me: any, sl: Slider, newValue: number, oldValue: number) => void
	onDragEnd?: () => void
	onDragStart?: () => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ClearTrigger extends React.Component<ClearTriggerProps, any> { }
export interface ClearTriggerProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	border?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	focusOnTap?: boolean
	group?: string
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideMode?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	reference?: string
	relative?: boolean
	renderTo?: any
	repeat?: boolean | Object
	ripple?: boolean | Object | string
	scope?: Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	side?: string
	style?: string | Object
	toFrontOnShow?: boolean
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class DateTrigger extends React.Component<DateTriggerProps, any> { }
export interface DateTriggerProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	border?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	focusOnTap?: boolean
	group?: string
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideMode?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	reference?: string
	relative?: boolean
	renderTo?: any
	repeat?: boolean | Object
	ripple?: boolean | Object | string
	scope?: Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	side?: string
	style?: string | Object
	toFrontOnShow?: boolean
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ExpandTrigger extends React.Component<ExpandTriggerProps, any> { }
export interface ExpandTriggerProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	border?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	focusOnTap?: boolean
	group?: string
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideMode?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	reference?: string
	relative?: boolean
	renderTo?: any
	repeat?: boolean | Object
	ripple?: boolean | Object | string
	scope?: Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	side?: string
	style?: string | Object
	toFrontOnShow?: boolean
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class MenuTrigger extends React.Component<MenuTriggerProps, any> { }
export interface MenuTriggerProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	border?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	focusOnTap?: boolean
	group?: string
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideMode?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	menu?: Menu | string | Object
	menuAlign?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	reference?: string
	relative?: boolean
	renderTo?: any
	repeat?: boolean | Object
	ripple?: boolean | Object | string
	scope?: Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	side?: string
	style?: string | Object
	toFrontOnShow?: boolean
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class RevealTrigger extends React.Component<RevealTriggerProps, any> { }
export interface RevealTriggerProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	border?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	focusOnTap?: boolean
	group?: string
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideMode?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	reference?: string
	relative?: boolean
	renderTo?: any
	repeat?: boolean | Object
	ripple?: boolean | Object | string
	scope?: Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	side?: string
	style?: string | Object
	toFrontOnShow?: boolean
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SpinDownTrigger extends React.Component<SpinDownTriggerProps, any> { }
export interface SpinDownTriggerProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	border?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	focusOnTap?: boolean
	group?: string
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideMode?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	reference?: string
	relative?: boolean
	renderTo?: any
	repeat?: boolean | Object
	ripple?: boolean | Object | string
	scope?: Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	side?: string
	style?: string | Object
	toFrontOnShow?: boolean
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SpinUpTrigger extends React.Component<SpinUpTriggerProps, any> { }
export interface SpinUpTriggerProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	border?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	focusOnTap?: boolean
	group?: string
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideMode?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	reference?: string
	relative?: boolean
	renderTo?: any
	repeat?: boolean | Object
	ripple?: boolean | Object | string
	scope?: Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	side?: string
	style?: string | Object
	toFrontOnShow?: boolean
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TimeTrigger extends React.Component<TimeTriggerProps, any> { }
export interface TimeTriggerProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	border?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	focusOnTap?: boolean
	group?: string
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideMode?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	reference?: string
	relative?: boolean
	renderTo?: any
	repeat?: boolean | Object
	ripple?: boolean | Object | string
	scope?: Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	side?: string
	style?: string | Object
	toFrontOnShow?: boolean
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Trigger extends React.Component<TriggerProps, any> { }
export interface TriggerProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	border?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	focusOnTap?: boolean
	group?: string
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideMode?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	reference?: string
	relative?: boolean
	renderTo?: any
	repeat?: boolean | Object
	ripple?: boolean | Object | string
	scope?: Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	side?: string
	style?: string | Object
	toFrontOnShow?: boolean
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class URLField extends React.Component<URLFieldProps, any> { }
export interface URLFieldProps {
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Field, newValue: string, oldValue: string) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class FieldSet extends React.Component<FieldSetProps, any> { }
export interface FieldSetProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	fieldSeparators?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	inputBorders?: boolean
	instructions?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	title?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class FormPanel extends React.Component<FormPanelProps, any> { }
export interface FormPanelProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	api?: Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	baseParams?: Object
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enableSubmissionForm?: boolean
	enctype?: string
	enterAnimation?: string | any
	exitAnimation?: string | any
	fieldSeparators?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	inputBorders?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	method?: string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multipartDetection?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	paramOrder?: string | string[]
	paramsAsHash?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	standardSubmit?: boolean
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	submitOnAction?: Object
	tabIndex?: number
	tbar?: Object | Object[]
	timeout?: number
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	trackResetOnLoad?: boolean
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	url?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeSubmit?: (this: any, values: Object, options: Object, e: any) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onException?: (this: any, result: Object) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSubmit?: (this: any, result: Object, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class GridCellbase extends React.Component<GridCellbaseProps, any> { }
export interface GridCellbaseProps {
	align?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	bodyCls?: string
	bodyStyle?: string | Object
	border?: boolean
	cls?: string
	column?: Column
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	height?: number | string
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	ripple?: boolean | Object | string
	selectable?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	value?: any
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class BooleanCell extends React.Component<BooleanCellProps, any> { }
export interface BooleanCellProps {
	align?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	bodyCls?: string
	bodyStyle?: string | Object
	border?: boolean
	cls?: string
	column?: Column
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	encodeHtml?: boolean
	falseText?: string
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	height?: number | string
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	ripple?: boolean | Object | string
	selectable?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	touchAction?: Object
	trueText?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	undefinedText?: string
	userCls?: string | string[]
	value?: any
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	zeroValue?: string
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class GridCell extends React.Component<GridCellProps, any> { }
export interface GridCellProps {
	align?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	bodyCls?: string
	bodyStyle?: string | Object
	border?: boolean
	cls?: string
	column?: Column
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	encodeHtml?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	formatter?: string
	height?: number | string
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	ripple?: boolean | Object | string
	scope?: Object
	selectable?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	touchAction?: Object
	tpl?: string | string[] | any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	value?: any
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	zeroValue?: string
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class CheckCell extends React.Component<CheckCellProps, any> { }
export interface CheckCellProps {
	align?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	bodyCls?: string
	bodyStyle?: string | Object
	border?: boolean
	cls?: string
	column?: Column
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	height?: number | string
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	ripple?: boolean | Object | string
	selectable?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	value?: any
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class DateCell extends React.Component<DateCellProps, any> { }
export interface DateCellProps {
	align?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	bodyCls?: string
	bodyStyle?: string | Object
	border?: boolean
	cls?: string
	column?: Column
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	encodeHtml?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	format?: string
	height?: number | string
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	ripple?: boolean | Object | string
	selectable?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	value?: any
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	zeroValue?: string
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class NumberCell extends React.Component<NumberCellProps, any> { }
export interface NumberCellProps {
	align?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	bodyCls?: string
	bodyStyle?: string | Object
	border?: boolean
	cls?: string
	column?: Column
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	encodeHtml?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	format?: string
	height?: number | string
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	ripple?: boolean | Object | string
	selectable?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	value?: any
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	zeroValue?: string
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class RowNumbererCell extends React.Component<RowNumbererCellProps, any> { }
export interface RowNumbererCellProps {
	align?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	bodyCls?: string
	bodyStyle?: string | Object
	border?: boolean
	cls?: string
	column?: Column
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	encodeHtml?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	format?: string
	height?: number | string
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	ripple?: boolean | Object | string
	selectable?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	value?: any
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	zeroValue?: string
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TextCell extends React.Component<TextCellProps, any> { }
export interface TextCellProps {
	align?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	bodyCls?: string
	bodyStyle?: string | Object
	border?: boolean
	cls?: string
	column?: Column
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	encodeHtml?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	height?: number | string
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	ripple?: boolean | Object | string
	selectable?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	value?: any
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	zeroValue?: string
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TreeCell extends React.Component<TreeCellProps, any> { }
export interface TreeCellProps {
	align?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	bodyCls?: string
	bodyStyle?: string | Object
	border?: boolean
	cls?: string
	column?: Column
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	encodeHtml?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	formatter?: string
	height?: number | string
	hideMode?: string
	iconCls?: string
	iconClsProperty?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	ripple?: boolean | Object | string
	scope?: Object
	selectable?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	text?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	touchAction?: Object
	tpl?: string | string[] | any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	value?: any
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	zeroValue?: string
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class WidgetCell extends React.Component<WidgetCellProps, any> { }
export interface WidgetCellProps {
	align?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	bodyCls?: string
	bodyStyle?: string | Object
	border?: boolean
	cls?: string
	column?: Column
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	forceWidth?: boolean
	height?: number | string
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	ripple?: boolean | Object | string
	selectable?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	value?: any
	viewModel?: string | Object | any
	widget: Object
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class CellEditor extends React.Component<CellEditorProps, any> { }
export interface CellEditorProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	alignment?: string
	allowBlur?: boolean
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoPin?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cancelOnClear?: boolean
	cancelOnEsc?: boolean
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	completeOnEnter?: boolean
	constrain?: boolean
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	field?: Object
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideEl?: boolean
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignoreNoChange?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	matchFont?: boolean
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	offset?: number[]
	padding?: number | string
	parentEl?: string | HTMLElement | any
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	revertInvalid?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean | string
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	swallowKeys?: boolean
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	updateEl?: boolean
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeComplete?: (this: Editor, value: Object, startValue: Object) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStartEdit?: (this: Editor, boundEl: any, value: Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCancelEdit?: (this: Editor, value: Object, startValue: Object) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onComplete?: (this: Editor, value: Object, startValue: Object) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSpecialKey?: (this: Editor, field: any, event: any) => void
	onStartEdit?: (this: Editor, boundEl: any, value: Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class BooleanColumn extends React.Component<BooleanColumnProps, any> { }
export interface BooleanColumnProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	cell?: Object
	centered?: boolean
	cls?: string | string[]
	columns?: any
	computedWidth?: number
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataIndex: string
	defaultColumnUI?: any
	defaultEditor?: Object | Field
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	defaultWidth?: number
	depends?: string[]
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	editor?: Object | string
	enterAnimation?: string | any
	exitAnimation?: string | any
	exportRenderer?: boolean | Function | string
	exportStyle?: any
	exportSummaryRenderer?: boolean | Function | string
	falseText?: string
	filter?: Object | boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	formatter?: string
	fullscreen?: boolean
	groupable?: boolean
	grouper?: Function | string | Object | any
	groupHeaderTpl?: string | string[] | any
	height?: number | string
	hidden?: boolean
	hideable?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignore?: boolean
	ignoreExport?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	locked?: boolean | string
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuDisabled?: boolean
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	sorter?: Function | string | Object | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	summary?: string
	summaryCell?: Object
	summaryDataIndex?: string
	summaryFormatter?: string
	summaryRenderer?: Function | string
	summaryType?: string | Function
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	trueText?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	undefinedText?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class CheckColumn extends React.Component<CheckColumnProps, any> { }
export interface CheckColumnProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	cell?: Object
	centered?: boolean
	cls?: string | string[]
	columns?: any
	computedWidth?: number
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataIndex: string
	defaultColumnUI?: any
	defaultEditor?: Object | Field
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	defaultWidth?: number
	depends?: string[]
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	editor?: Object | string
	enterAnimation?: string | any
	exitAnimation?: string | any
	exportRenderer?: boolean | Function | string
	exportStyle?: any
	exportSummaryRenderer?: boolean | Function | string
	filter?: Object | boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	formatter?: string
	fullscreen?: boolean
	groupable?: boolean
	grouper?: Function | string | Object | any
	groupHeaderTpl?: string | string[] | any
	headerCheckbox?: boolean
	headerCheckboxAlign?: string
	height?: number | string
	hidden?: boolean
	hideable?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignore?: boolean
	ignoreExport?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	locked?: boolean | string
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuDisabled?: boolean
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	sorter?: Function | string | Object | any
	stateful?: boolean | Object | string[]
	stateId?: string
	stopSelection?: boolean
	style?: string | Object
	summary?: string
	summaryCell?: Object
	summaryDataIndex?: string
	summaryFormatter?: string
	summaryRenderer?: Function | string
	summaryType?: string | Function
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCheckChange?: (this: any, rowIndex: number, checked: boolean, record: any, e: any) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCheckChange?: (this: any, rowIndex: number, checked: boolean, record: any, e: any) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class GridColumn extends React.Component<GridColumnProps, any> { }
export interface GridColumnProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	cell?: Object
	centered?: boolean
	cls?: string | string[]
	columns?: any
	computedWidth?: number
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataIndex: string
	defaultColumnUI?: any
	defaultEditor?: Object | Field
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	defaultWidth?: number
	depends?: string[]
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	editor?: Object | string
	enterAnimation?: string | any
	exitAnimation?: string | any
	exportRenderer?: boolean | Function | string
	exportStyle?: any
	exportSummaryRenderer?: boolean | Function | string
	filter?: Object | boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	formatter?: string
	fullscreen?: boolean
	groupable?: boolean
	grouper?: Function | string | Object | any
	groupHeaderTpl?: string | string[] | any
	height?: number | string
	hidden?: boolean
	hideable?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignore?: boolean
	ignoreExport?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	locked?: boolean | string
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuDisabled?: boolean
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	sorter?: Function | string | Object | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	summary?: string
	summaryCell?: Object
	summaryDataIndex?: string
	summaryFormatter?: string
	summaryRenderer?: Function | string
	summaryType?: string | Function
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Column extends React.Component<ColumnProps, any> { }
export interface ColumnProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	cell?: Object
	centered?: boolean
	cls?: string | string[]
	columns?: any
	computedWidth?: number
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataIndex: string
	defaultColumnUI?: any
	defaultEditor?: Object | Field
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	defaultWidth?: number
	depends?: string[]
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	editor?: Object | string
	enterAnimation?: string | any
	exitAnimation?: string | any
	exportRenderer?: boolean | Function | string
	exportStyle?: any
	exportSummaryRenderer?: boolean | Function | string
	filter?: Object | boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	formatter?: string
	fullscreen?: boolean
	groupable?: boolean
	grouper?: Function | string | Object | any
	groupHeaderTpl?: string | string[] | any
	height?: number | string
	hidden?: boolean
	hideable?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignore?: boolean
	ignoreExport?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	locked?: boolean | string
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuDisabled?: boolean
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	sorter?: Function | string | Object | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	summary?: string
	summaryCell?: Object
	summaryDataIndex?: string
	summaryFormatter?: string
	summaryRenderer?: Function | string
	summaryType?: string | Function
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TemplateColumn extends React.Component<TemplateColumnProps, any> { }
export interface TemplateColumnProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	cell?: Object
	centered?: boolean
	cls?: string | string[]
	columns?: any
	computedWidth?: number
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataIndex: string
	defaultColumnUI?: any
	defaultEditor?: Object | Field
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	defaultWidth?: number
	depends?: string[]
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	editor?: Object | string
	enterAnimation?: string | any
	exitAnimation?: string | any
	exportRenderer?: boolean | Function | string
	exportStyle?: any
	exportSummaryRenderer?: boolean | Function | string
	filter?: Object | boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	formatter?: string
	fullscreen?: boolean
	groupable?: boolean
	grouper?: Function | string | Object | any
	groupHeaderTpl?: string | string[] | any
	height?: number | string
	hidden?: boolean
	hideable?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignore?: boolean
	ignoreExport?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	locked?: boolean | string
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuDisabled?: boolean
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	sorter?: Function | string | Object | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	summary?: string
	summaryCell?: Object
	summaryDataIndex?: string
	summaryFormatter?: string
	summaryRenderer?: Function | string
	summaryType?: string | Function
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class DateColumn extends React.Component<DateColumnProps, any> { }
export interface DateColumnProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	cell?: Object
	centered?: boolean
	cls?: string | string[]
	columns?: any
	computedWidth?: number
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataIndex: string
	defaultColumnUI?: any
	defaultEditor?: Object | Field
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	defaultWidth?: number
	depends?: string[]
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	editor?: Object | string
	enterAnimation?: string | any
	exitAnimation?: string | any
	exportRenderer?: boolean | Function | string
	exportStyle?: any
	exportSummaryRenderer?: boolean | Function | string
	filter?: Object | boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	format: string
	formatter?: string
	fullscreen?: boolean
	groupable?: boolean
	grouper?: Function | string | Object | any
	groupHeaderTpl?: string | string[] | any
	height?: number | string
	hidden?: boolean
	hideable?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignore?: boolean
	ignoreExport?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	locked?: boolean | string
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuDisabled?: boolean
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	sorter?: Function | string | Object | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	summary?: string
	summaryCell?: Object
	summaryDataIndex?: string
	summaryFormatter?: string
	summaryRenderer?: Function | string
	summaryType?: string | Function
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class NumberColumn extends React.Component<NumberColumnProps, any> { }
export interface NumberColumnProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	cell?: Object
	centered?: boolean
	cls?: string | string[]
	columns?: any
	computedWidth?: number
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataIndex: string
	defaultColumnUI?: any
	defaultEditor?: Object | Field
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	defaultWidth?: number
	depends?: string[]
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	editor?: Object | string
	enterAnimation?: string | any
	exitAnimation?: string | any
	exportRenderer?: boolean | Function | string
	exportStyle?: any
	exportSummaryRenderer?: boolean | Function | string
	filter?: Object | boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	format?: string
	formatter?: string
	fullscreen?: boolean
	groupable?: boolean
	grouper?: Function | string | Object | any
	groupHeaderTpl?: string | string[] | any
	height?: number | string
	hidden?: boolean
	hideable?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignore?: boolean
	ignoreExport?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	locked?: boolean | string
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuDisabled?: boolean
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	sorter?: Function | string | Object | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	summary?: string
	summaryCell?: Object
	summaryDataIndex?: string
	summaryFormatter?: string
	summaryRenderer?: Function | string
	summaryType?: string | Function
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class RowNumberer extends React.Component<RowNumbererProps, any> { }
export interface RowNumbererProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	cell?: Object
	centered?: boolean
	cls?: string | string[]
	columns?: any
	computedWidth?: number
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataIndex: string
	defaultColumnUI?: any
	defaultEditor?: Object | Field
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	defaultWidth?: number
	depends?: string[]
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	editor?: Object | string
	enterAnimation?: string | any
	exitAnimation?: string | any
	exportRenderer?: boolean | Function | string
	exportStyle?: any
	exportSummaryRenderer?: boolean | Function | string
	filter?: Object | boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	format?: string
	formatter?: string
	fullscreen?: boolean
	groupable?: boolean
	grouper?: Function | string | Object | any
	groupHeaderTpl?: string | string[] | any
	height?: number | string
	hidden?: boolean
	hideable?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignore?: boolean
	ignoreExport?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	locked?: boolean | string
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: boolean
	menuDisabled?: boolean
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	sorter?: Function | string | Object | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	summary?: string
	summaryCell?: Object
	summaryDataIndex?: string
	summaryFormatter?: string
	summaryRenderer?: Function | string
	summaryType?: string | Function
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SelectionColumn extends React.Component<SelectionColumnProps, any> { }
export interface SelectionColumnProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	cell?: Object
	centered?: boolean
	cls?: string | string[]
	columns?: any
	computedWidth?: number
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataIndex: string
	defaultColumnUI?: any
	defaultEditor?: Object | Field
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	defaultWidth?: number
	depends?: string[]
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	editor?: Object | string
	enterAnimation?: string | any
	exitAnimation?: string | any
	exportRenderer?: boolean | Function | string
	exportStyle?: any
	exportSummaryRenderer?: boolean | Function | string
	filter?: Object | boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	formatter?: string
	fullscreen?: boolean
	groupable?: boolean
	grouper?: Function | string | Object | any
	groupHeaderTpl?: string | string[] | any
	headerCheckbox?: boolean
	headerCheckboxAlign?: string
	height?: number | string
	hidden?: boolean
	hideable?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignore?: boolean
	ignoreExport?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	locked?: boolean | string
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuDisabled?: boolean
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	sorter?: Function | string | Object | any
	stateful?: boolean | Object | string[]
	stateId?: string
	stopSelection?: string
	style?: string | Object
	summary?: string
	summaryCell?: Object
	summaryDataIndex?: string
	summaryFormatter?: string
	summaryRenderer?: Function | string
	summaryType?: string | Function
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCheckChange?: (this: any, rowIndex: number, checked: boolean, record: any, e: any) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCheckChange?: (this: any, rowIndex: number, checked: boolean, record: any, e: any) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TextColumn extends React.Component<TextColumnProps, any> { }
export interface TextColumnProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	cell?: Object
	centered?: boolean
	cls?: string | string[]
	columns?: any
	computedWidth?: number
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataIndex: string
	defaultColumnUI?: any
	defaultEditor?: Object | Field
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	defaultWidth?: number
	depends?: string[]
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	editor?: Object | string
	enterAnimation?: string | any
	exitAnimation?: string | any
	exportRenderer?: boolean | Function | string
	exportStyle?: any
	exportSummaryRenderer?: boolean | Function | string
	filter?: Object | boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	formatter?: string
	fullscreen?: boolean
	groupable?: boolean
	grouper?: Function | string | Object | any
	groupHeaderTpl?: string | string[] | any
	height?: number | string
	hidden?: boolean
	hideable?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignore?: boolean
	ignoreExport?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	locked?: boolean | string
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuDisabled?: boolean
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	sorter?: Function | string | Object | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	summary?: string
	summaryCell?: Object
	summaryDataIndex?: string
	summaryFormatter?: string
	summaryRenderer?: Function | string
	summaryType?: string | Function
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TreeColumn extends React.Component<TreeColumnProps, any> { }
export interface TreeColumnProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	cell?: Object
	centered?: boolean
	cls?: string | string[]
	columns?: any
	computedWidth?: number
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataIndex: string
	defaultColumnUI?: any
	defaultEditor?: Object | Field
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	defaultWidth?: number
	depends?: string[]
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	editable?: boolean
	editor?: Object | string
	enterAnimation?: string | any
	exitAnimation?: string | any
	exportRenderer?: boolean | Function | string
	exportStyle?: any
	exportSummaryRenderer?: boolean | Function | string
	filter?: Object | boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	formatter?: string
	fullscreen?: boolean
	groupable?: boolean
	grouper?: Function | string | Object | any
	groupHeaderTpl?: string | string[] | any
	height?: number | string
	hidden?: boolean
	hideable?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	ignore?: boolean
	ignoreExport?: boolean
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	locked?: boolean | string
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuDisabled?: boolean
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	sorter?: Function | string | Object | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	summary?: string
	summaryCell?: Object
	summaryDataIndex?: string
	summaryFormatter?: string
	summaryRenderer?: Function | string
	summaryType?: string | Function
	tabIndex?: number
	text?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Grid extends React.Component<GridProps, any> { }
export interface GridProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	associatedData?: boolean | Object
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	bufferSize?: number
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	columnLines?: boolean
	columnMenu?: Object
	columnResize?: boolean
	columns: any
	columnsMenuItem?: any
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: any
	deferEmptyText?: boolean
	deselectOnContainerClick?: boolean
	disabled?: boolean
	disableSelection?: boolean
	disclosureProperty?: string
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	emptyItemText?: string
	emptyText?: string | boolean
	emptyTextDefaults?: Object | Component
	emptyTextProperty?: string
	enableTextSelection?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	grouped?: boolean
	groupFooter?: Object | ItemHeader
	groupHeader?: Object | ItemHeader
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideHeaders?: boolean
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	indexBar?: boolean | Object | IndexBar
	infinite?: boolean
	inline?: boolean | Object
	innerCls?: string
	itemButtonMode?: boolean
	itemCls?: string
	itemConfig?: Object | any
	itemContentCls?: string
	itemDataMap?: Object
	itemId?: string
	itemInnerCls?: string
	itemRipple?: boolean | Object
	itemsFocusable?: any
	itemTpl?: string | string[] | any
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	loadingHeight?: number
	loadingText?: string | boolean
	margin?: number | string
	markDirty?: boolean
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxItemCache?: number
	maxWidth?: number | string
	minHeight?: number | string
	minimumBufferDistance?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multiColumnSort?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	onItemDisclosure?: boolean | Function | string | Object
	padding?: number | string
	pinFooters?: boolean
	pinHeaders?: boolean
	pinnedFooter?: Object
	pinnedHeader?: Object
	plugins?: Object[] | any | Object
	pressedDelay?: number
	preventSelectionOnDisclose?: boolean
	preventSelectionOnTool?: boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	reserveScrollbar?: boolean
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	rowLines?: boolean
	rowNumbers?: boolean | Object
	scrollable?: boolean | string | Object
	scrollDock?: string
	scrollToTopOnRefresh?: boolean
	selectable?: any
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	stateful?: boolean | Object | string[]
	stateId?: string
	store: any | Object
	striped?: boolean
	style?: string | Object
	tabIndex?: number
	title?: string
	titleBar?: Object
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerCtEvent?: string
	triggerEvent?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	useSimpleItems?: boolean
	variableHeights?: boolean
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeSelectionextEnd?: (grid: Grid, An: any, extension: Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCellSelection?: (grid: Grid, selection: any) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChildDoubleTap?: (this: List, location: any) => void
	onChildLongpress?: (this: List, location: any) => void
	onChildMouseEnter?: (this: List, location: any) => void
	onChildMouseLeave?: (this: List, location: any) => void
	onChildSingleTap?: (this: List, location: any) => void
	onChildTap?: (this: List, location: any) => void
	onChildTapHold?: (this: List, location: any) => void
	onChildTouchCancel?: (this: List, location: any) => void
	onChildTouchEnd?: (this: List, location: any) => void
	onChildTouchMove?: (this: List, location: any) => void
	onChildTouchStart?: (this: List, location: any) => void
	onColumnAdd?: (this: Grid, column: Column, index: number) => void
	onColumnHide?: (this: Grid, column: Column) => void
	onColumnMenuCreated?: (grid: Grid, column: any, menu: Menu) => void
	onColumnMove?: (this: Grid, column: Column, fromIndex: number, toIndex: number) => void
	onColumnRemove?: (this: Grid, column: Column) => void
	onColumnResize?: (this: Grid, column: Column, width: number) => void
	onColumnSelection?: (grid: Grid, selection: any) => void
	onColumnShow?: (this: Grid, column: Column) => void
	onColumnSort?: (this: Grid, column: Column, direction: string) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: DataView, records: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDisclose?: (list: List, record: any, target: HTMLElement, index: number, event: any) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemAction?: (this: List, index: number, record: any, action: string) => void
	onItemDoubleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemLongpress?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseEnter?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseLeave?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSingleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSwipe?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTapHold?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchCancel?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchEnd?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchMove?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchStart?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: () => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNavigate?: (this: DataView, to: any, from: any) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRefresh?: (this: DataView) => void
	onRemove?: () => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: DataView, selected: any) => void
	onSelectionExtenderDrag?: (grid: Grid, An: any, extension: Object) => void
	onShow?: (sender: Component) => void
	onStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class HeaderContainer extends React.Component<HeaderContainerProps, any> { }
export interface HeaderContainerProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	columns?: any
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultColumnUI?: any
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class LockedGrid extends React.Component<LockedGridProps, any> { }
export interface LockedGridProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	columnMenu?: Object
	columns: any
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaultLockedRegion?: string
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	gridDefaults?: Object
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideHeaders?: boolean
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemConfig?: Object
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	leftGridDefaults?: Object
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	regions?: Object
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	rightGridDefaults?: Object
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any | Object | string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	variableHeights?: boolean
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class LockedGridRegion extends React.Component<LockedGridRegionProps, any> { }
export interface LockedGridRegionProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	grid?: Grid
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	locked?: boolean | string
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	menuLabel?: string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	regionKey?: string
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class GridColumnsMenu extends React.Component<GridColumnsMenuProps, any> { }
export interface GridColumnsMenuProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clickHideDelay?: number
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnClick?: boolean
	hideOnMaskTap?: boolean
	href?: string
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	indented?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuAlign?: string
	menuExpandDelay?: number
	menuHideDelay?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	separator?: boolean
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	target?: string
	text?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class GridGroupbythisMenuItem extends React.Component<GridGroupbythisMenuItemProps, any> { }
export interface GridGroupbythisMenuItemProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clickHideDelay?: number
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnClick?: boolean
	hideOnMaskTap?: boolean
	href?: string
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	indented?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuAlign?: string
	menuExpandDelay?: number
	menuHideDelay?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	separator?: boolean
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	target?: string
	text?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class GridShowinGroupsMenuItem extends React.Component<GridShowinGroupsMenuItemProps, any> { }
export interface GridShowinGroupsMenuItemProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	checkChangeDisabled?: boolean
	checked?: boolean
	checkHandler?: Function | string
	clickHideDelay?: number
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnClick?: boolean
	hideOnMaskTap?: boolean
	href?: string
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	indented?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuAlign?: string
	menuExpandDelay?: number
	menuHideDelay?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	separator?: boolean
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	submenuText?: string
	tabIndex?: number
	target?: string
	text?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCheckChange?: (this: any, checked: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCheckChange?: (this: any, checked: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class GridSortascMenuItem extends React.Component<GridSortascMenuItemProps, any> { }
export interface GridSortascMenuItemProps {
	allowUncheck?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	checkChangeDisabled?: boolean
	checked?: boolean
	checkHandler?: Function | string
	clickHideDelay?: number
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	group: string
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnClick?: boolean
	hideOnMaskTap?: boolean
	href?: string
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	indented?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuAlign?: string
	menuExpandDelay?: number
	menuHideDelay?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	separator?: boolean
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	submenuText?: string
	tabIndex?: number
	target?: string
	text?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCheckChange?: (this: any, checked: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCheckChange?: (this: any, checked: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class GridSortdescMenuItem extends React.Component<GridSortdescMenuItemProps, any> { }
export interface GridSortdescMenuItemProps {
	allowUncheck?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	checkChangeDisabled?: boolean
	checked?: boolean
	checkHandler?: Function | string
	clickHideDelay?: number
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	group: string
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnClick?: boolean
	hideOnMaskTap?: boolean
	href?: string
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	indented?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuAlign?: string
	menuExpandDelay?: number
	menuHideDelay?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	separator?: boolean
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	submenuText?: string
	tabIndex?: number
	target?: string
	text?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCheckChange?: (this: any, checked: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCheckChange?: (this: any, checked: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PagingToolbar extends React.Component<PagingToolbarProps, any> { }
export interface PagingToolbarProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultButtonUI?: string
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	nextButton?: Object
	padding?: number | string
	plugins?: Object[] | any | Object
	prevButton?: Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sliderField?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	title?: string | Title
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class GridRow extends React.Component<GridRowProps, any> { }
export interface GridRowProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	body?: Object
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultCellUI?: string
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	expandedField?: string
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	recordIndex?: number
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class RowBody extends React.Component<RowBodyProps, any> { }
export interface RowBodyProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class RowHeader extends React.Component<RowHeaderProps, any> { }
export interface RowHeaderProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	group?: any
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class GridsummaryRow extends React.Component<GridsummaryRowProps, any> { }
export interface GridsummaryRowProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	body?: Object
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultCellUI?: string
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	expandedField?: string
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	recordIndex?: number
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Tree extends React.Component<TreeProps, any> { }
export interface TreeProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	associatedData?: boolean | Object
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	bufferSize?: number
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	columnLines?: boolean
	columnMenu?: Object
	columnResize?: boolean
	columns: any
	columnsMenuItem?: any
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: any
	deferEmptyText?: boolean
	deselectOnContainerClick?: boolean
	disabled?: boolean
	disableSelection?: boolean
	disclosureProperty?: string
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	emptyItemText?: string
	emptyText?: string | boolean
	emptyTextDefaults?: Object | Component
	emptyTextProperty?: string
	enableTextSelection?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	expanderFirst?: boolean
	expanderOnly?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	folderSort?: boolean
	fullscreen?: boolean
	grouped?: boolean
	groupFooter?: Object | ItemHeader
	groupHeader?: Object | ItemHeader
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideHeaders?: boolean
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	indexBar?: boolean | Object | IndexBar
	infinite?: boolean
	inline?: boolean | Object
	innerCls?: string
	itemButtonMode?: boolean
	itemCls?: string
	itemConfig?: Object | any
	itemContentCls?: string
	itemDataMap?: Object
	itemId?: string
	itemInnerCls?: string
	itemRipple?: boolean | Object
	itemsFocusable?: any
	itemTpl?: string | string[] | any
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	loadingHeight?: number
	loadingText?: string | boolean
	margin?: number | string
	markDirty?: boolean
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxItemCache?: number
	maxWidth?: number | string
	minHeight?: number | string
	minimumBufferDistance?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multiColumnSort?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	onItemDisclosure?: boolean | Function | string | Object
	padding?: number | string
	pinFooters?: boolean
	pinHeaders?: boolean
	pinnedFooter?: Object
	pinnedHeader?: Object
	plugins?: Object[] | any | Object
	pressedDelay?: number
	preventSelectionOnDisclose?: boolean
	preventSelectionOnTool?: boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	reserveScrollbar?: boolean
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	rowLines?: boolean
	rowNumbers?: boolean | Object
	scrollable?: boolean | string | Object
	scrollDock?: string
	scrollToTopOnRefresh?: boolean
	selectable?: any
	selection?: any
	selectOnExpander?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	singleExpand?: boolean
	sortable?: boolean
	stateful?: boolean | Object | string[]
	stateId?: string
	store: any | Object
	striped?: boolean
	style?: string | Object
	tabIndex?: number
	title?: string
	titleBar?: Object
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerCtEvent?: string
	triggerEvent?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	useSimpleItems?: boolean
	variableHeights?: boolean
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeload?: (store: any, operation: any) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeNodeCollapse?: (node: any, record: any) => void
	onBeforeNodeExpand?: (row: any, record: any) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeSelectionextEnd?: (grid: Grid, An: any, extension: Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCellSelection?: (grid: Grid, selection: any) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChildDoubleTap?: (this: List, location: any) => void
	onChildLongpress?: (this: List, location: any) => void
	onChildMouseEnter?: (this: List, location: any) => void
	onChildMouseLeave?: (this: List, location: any) => void
	onChildSingleTap?: (this: List, location: any) => void
	onChildTap?: (this: List, location: any) => void
	onChildTapHold?: (this: List, location: any) => void
	onChildTouchCancel?: (this: List, location: any) => void
	onChildTouchEnd?: (this: List, location: any) => void
	onChildTouchMove?: (this: List, location: any) => void
	onChildTouchStart?: (this: List, location: any) => void
	onColumnAdd?: (this: Grid, column: Column, index: number) => void
	onColumnHide?: (this: Grid, column: Column) => void
	onColumnMenuCreated?: (grid: Grid, column: any, menu: Menu) => void
	onColumnMove?: (this: Grid, column: Column, fromIndex: number, toIndex: number) => void
	onColumnRemove?: (this: Grid, column: Column) => void
	onColumnResize?: (this: Grid, column: Column, width: number) => void
	onColumnSelection?: (grid: Grid, selection: any) => void
	onColumnShow?: (this: Grid, column: Column) => void
	onColumnSort?: (this: Grid, column: Column, direction: string) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: DataView, records: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDisclose?: (list: List, record: any, target: HTMLElement, index: number, event: any) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemAction?: (this: List, index: number, record: any, action: string) => void
	onItemDoubleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemLongpress?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseEnter?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseLeave?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSingleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSwipe?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTapHold?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchCancel?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchEnd?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchMove?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchStart?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onLoad?: (this: any, records: any, successful: boolean, operation: any, node: any) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: () => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNavigate?: (this: DataView, to: any, from: any) => void
	onNodeCollapse?: (node: any, record: any) => void
	onNodeExpand?: (row: any, record: any) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRefresh?: (this: DataView) => void
	onRemove?: () => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: DataView, selected: any) => void
	onSelectionExtenderDrag?: (grid: Grid, An: any, extension: Object) => void
	onShow?: (sender: Component) => void
	onStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Image extends React.Component<ImageProps, any> { }
export interface ImageProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	backgroundCls?: string
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	imageCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	mode?: string
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	src?: string
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onError?: (this: Img, e: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onLoad?: (this: Img, e: any) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onTap?: (this: Img, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Img extends React.Component<ImgProps, any> { }
export interface ImgProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	backgroundCls?: string
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	imageCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	mode?: string
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	src?: string
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onError?: (this: Img, e: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onLoad?: (this: Img, e: any) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onTap?: (this: Img, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Indicator extends React.Component<IndicatorProps, any> { }
export interface IndicatorProps {
	activeIndex?: number
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	count?: number
	data?: Object
	defaultListenerScope?: boolean
	direction?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tapMode?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onIndicatorTap?: (this: Indicator, index: number, item: any) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNext?: (this: Indicator) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onPrevious?: (this: Indicator) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Label extends React.Component<LabelProps, any> { }
export interface LabelProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TreeList extends React.Component<TreeListProps, any> { }
export interface TreeListProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	defaults?: Object
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	expanderFirst?: boolean
	expanderOnly?: boolean
	flex?: number | string | Object
	floated?: boolean
	floatLeafItems?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightPath?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	itemRipple?: boolean | Object
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	micro?: boolean
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selection?: any | number | string
	selectOnExpander?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	singleExpand?: boolean
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: string | Object | any
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemClick?: (sender: any, info: Object) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelectionChange?: (treelist: any, record: any) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TreeListItem extends React.Component<TreeListItemProps, any> { }
export interface TreeListItemProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	border?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	disabled?: boolean
	expandable?: boolean
	expanded?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	height?: number | string
	hidden?: boolean
	hideMode?: string
	iconCls?: string
	iconClsProperty?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	leaf?: boolean
	listeners?: Object
	loading?: boolean
	name?: string
	nameable?: boolean
	node?: any
	over?: number
	owner?: any
	parentItem?: any
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	reference?: string
	relative?: boolean
	renderTo?: any
	ripple?: boolean | Object | string
	rowCls?: string
	rowClsProperty?: string
	selected?: boolean
	selectedParent?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	text?: string
	textProperty?: string
	toFrontOnShow?: boolean
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class LoadMask extends React.Component<LoadMaskProps, any> { }
export interface LoadMaskProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: any
	centered?: boolean
	cls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	indicator?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: any
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	message?: string
	messageCls?: string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: any
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: any
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transparent?: boolean
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onTap?: (this: Mask, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Mask extends React.Component<MaskProps, any> { }
export interface MaskProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: any
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: any
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: any
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: any
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transparent?: boolean
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onTap?: (this: Mask, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Media extends React.Component<MediaProps, any> { }
export interface MediaProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoPause?: boolean
	autoResume?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	controls?: boolean
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enableControls?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	loop?: boolean
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	media?: any
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	muted?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	preload?: boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	url?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	volume?: number
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onEnded?: (this: Media, time: number) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onMutedChange?: (this: Media, muted: boolean) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPause?: (this: Media, time: number) => void
	onPlay?: (this: Media) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onStop?: (this: Media) => void
	onTimeUpdate?: (this: Media, time: number) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onVolumeChange?: (this: Media, volume: number) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class MenuCheckItem extends React.Component<MenuCheckItemProps, any> { }
export interface MenuCheckItemProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	checkChangeDisabled?: boolean
	checked?: boolean
	checkHandler?: Function | string
	clickHideDelay?: number
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnClick?: boolean
	hideOnMaskTap?: boolean
	href?: string
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	indented?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuAlign?: string
	menuExpandDelay?: number
	menuHideDelay?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	separator?: boolean
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	submenuText?: string
	tabIndex?: number
	target?: string
	text?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCheckChange?: (this: any, checked: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCheckChange?: (this: any, checked: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class MenuItem extends React.Component<MenuItemProps, any> { }
export interface MenuItemProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clickHideDelay?: number
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnClick?: boolean
	hideOnMaskTap?: boolean
	href?: string
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	indented?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuAlign?: string
	menuExpandDelay?: number
	menuHideDelay?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	separator?: boolean
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	target?: string
	text?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Menu extends React.Component<MenuProps, any> { }
export interface MenuProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	allowOtherMenus?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoHide?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	groups?: Object
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	ignoreParentClicks?: boolean
	inactiveChildTabIndex?: number
	indented?: boolean
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	mouseLeaveDelay?: number
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	separator?: boolean
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onGroupChange?: (menu: Menu, groupName: string, newValue: Object, oldValue: Object) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class MenuradioItem extends React.Component<MenuradioItemProps, any> { }
export interface MenuradioItemProps {
	allowUncheck?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	checkChangeDisabled?: boolean
	checked?: boolean
	checkHandler?: Function | string
	clickHideDelay?: number
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	group: string
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnClick?: boolean
	hideOnMaskTap?: boolean
	href?: string
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	indented?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | Object
	menuAlign?: string
	menuExpandDelay?: number
	menuHideDelay?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	separator?: boolean
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	submenuText?: string
	tabIndex?: number
	target?: string
	text?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCheckChange?: (this: any, checked: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCheckChange?: (this: any, checked: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class MenuSeparator extends React.Component<MenuSeparatorProps, any> { }
export interface MenuSeparatorProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class MessageBox extends React.Component<MessageBoxProps, any> { }
export interface MessageBoxProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object[] | Object
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	constrainDrag?: boolean | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultTextHeight?: number
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	dismissAction?: string | string[]
	dismissHandler?: string | Function
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maskTapHandler?: string | Function
	maxHeight?: number | string
	maximizable?: boolean
	maximizeAnimation?: Object
	maximized?: boolean
	maximizeProxy?: Object | Dialog
	maximizeTool?: Object | Tool
	maxWidth?: number | string
	message?: string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	msg?: string
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	prompt?: Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	restoreAnimation?: Object
	restoreTool?: Object | Tool
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaximize?: (dialog: Dialog) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRestore?: (dialog: Dialog) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaximize?: (dialog: Dialog) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRestore?: (dialog: Dialog) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class NavigationView extends React.Component<NavigationViewProps, any> { }
export interface NavigationViewProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultBackButtonText?: string
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	navigationBar?: boolean | Object
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	useTitleForBackButtonText?: boolean
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBack?: (this: any) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPop?: (this: any, view: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onPush?: (this: any, view: any) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Panel extends React.Component<PanelProps, any> { }
export interface PanelProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class DatePanel extends React.Component<DatePanelProps, any> { }
export interface DatePanelProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	animation?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoConfirm?: boolean
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	captionFormat?: string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dateCellFormat?: string
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	disabledDates?: any | string[]
	disabledDays?: number[]
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	format?: string
	fullscreen?: boolean
	handler?: Function
	header?: boolean | Object
	headerFormat?: string
	headerLength?: number
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideCaptions?: boolean
	hideMode?: string
	hideOnMaskTap?: boolean
	hideOutside?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxDate?: any | string
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minDate?: any | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	navigationPosition?: string
	nextText?: string
	padding?: number | string
	panes?: number
	plugins?: Object[] | any | Object
	prevText?: string
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selectOnNavigate?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAfterMaxDate?: boolean
	showAnimation?: string | any
	showBeforeMinDate?: boolean
	showFooter?: boolean
	showTodayButton?: boolean
	specialDates?: any | string[]
	specialDays?: number[]
	splitTitle?: boolean
	standardButtons?: Object
	startDay?: number
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	titleAnimation?: boolean | Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transformCellCls?: Function
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	viewModel?: string | Object | any
	weekendDays?: number[]
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	yearPicker?: Object
	yearPickerDefaults?: Object
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class DateTitle extends React.Component<DateTitleProps, any> { }
export interface DateTitleProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	glyph?: number | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	rotateIcon?: boolean
	rotation?: string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	text?: string
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PanelHeader extends React.Component<PanelHeaderProps, any> { }
export interface PanelHeaderProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	glyph?: number | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	title?: string | any
	titleAlign?: string
	titleRotation?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TimePanel extends React.Component<TimePanelProps, any> { }
export interface TimePanelProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoAdvance?: boolean
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	confirmable?: boolean
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	declineHandler?: Function
	defaultButtons?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	handler?: Function
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: any
	vertical?: boolean
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PanelTitle extends React.Component<PanelTitleProps, any> { }
export interface PanelTitleProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	glyph?: number | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	rotateIcon?: boolean
	rotation?: string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	text?: string
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class YearPicker extends React.Component<YearPickerProps, any> { }
export interface YearPickerProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	associatedData?: boolean | Object
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	bufferSize?: number
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: any
	deferEmptyText?: boolean
	deselectOnContainerClick?: boolean
	disabled?: boolean
	disableSelection?: boolean
	disclosureProperty?: string
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	emptyItemText?: string
	emptyText?: string | boolean
	emptyTextDefaults?: Object | Component
	emptyTextProperty?: string
	enableTextSelection?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	grouped?: boolean
	groupFooter?: Object | ItemHeader
	groupHeader?: Object | ItemHeader
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	indexBar?: boolean | Object | IndexBar
	infinite?: boolean
	inline?: boolean | Object
	innerCls?: string
	itemButtonMode?: boolean
	itemCls?: string
	itemConfig?: Object | Component
	itemContentCls?: string
	itemDataMap?: Object
	itemId?: string
	itemInnerCls?: string
	itemRipple?: boolean | Object
	itemTpl?: string | string[] | any
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	loadingHeight?: number
	loadingText?: string | boolean
	margin?: number | string
	markDirty?: boolean
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxItemCache?: number
	maxWidth?: number | string
	minHeight?: number | string
	minimumBufferDistance?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	onItemDisclosure?: boolean | Function | string | Object
	padding?: number | string
	pinFooters?: boolean
	pinHeaders?: boolean
	pinnedFooter?: Object
	pinnedHeader?: Object
	plugins?: Object[] | any | Object
	pressedDelay?: number
	preventSelectionOnDisclose?: boolean
	preventSelectionOnTool?: boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	rowLines?: boolean
	scrollable?: boolean | string | Object
	scrollDock?: string
	scrollToTopOnRefresh?: boolean
	selectable?: Object | any
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store: any | Object
	striped?: boolean
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerCtEvent?: string
	triggerEvent?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	useSimpleItems?: boolean
	variableHeights?: boolean
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChildDoubleTap?: (this: List, location: any) => void
	onChildLongpress?: (this: List, location: any) => void
	onChildMouseEnter?: (this: List, location: any) => void
	onChildMouseLeave?: (this: List, location: any) => void
	onChildSingleTap?: (this: List, location: any) => void
	onChildTap?: (this: List, location: any) => void
	onChildTapHold?: (this: List, location: any) => void
	onChildTouchCancel?: (this: List, location: any) => void
	onChildTouchEnd?: (this: List, location: any) => void
	onChildTouchMove?: (this: List, location: any) => void
	onChildTouchStart?: (this: List, location: any) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: DataView, records: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDisclose?: (list: List, record: any, target: HTMLElement, index: number, event: any) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemAction?: (this: List, index: number, record: any, action: string) => void
	onItemDoubleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemLongpress?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseEnter?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseLeave?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSingleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSwipe?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTapHold?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchCancel?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchEnd?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchMove?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchStart?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: () => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNavigate?: (this: DataView, to: any, from: any) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRefresh?: (this: DataView) => void
	onRemove?: () => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: DataView, selected: any) => void
	onShow?: (sender: Component) => void
	onStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class DatePicker extends React.Component<DatePickerProps, any> { }
export interface DatePickerProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cancelButton?: string | any
	cardSwitchAnimation?: string | Object | boolean
	centered?: any
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	cover?: boolean
	data?: Object
	dayText?: string
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	disabled?: boolean
	displayed?: boolean
	docked?: string
	doneButton?: string | any
	draggable?: boolean | Object | any
	enter?: string
	enterAnimation?: string | any
	exit?: string
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	monthText?: string
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	reveal?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	side?: string
	slotOrder?: Object[]
	slots?: Object[]
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	stretchX?: boolean
	stretchY?: boolean
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolbar?: TitleBar | Toolbar | Object
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	useTitles?: boolean
	value?: Object | any
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	yearFrom?: number
	yearText?: string
	yearTo?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCancel?: (this: Picker) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: any, value: any) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPick?: (this: Picker, values: Object, slot: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Picker extends React.Component<PickerProps, any> { }
export interface PickerProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cancelButton?: string | any
	cardSwitchAnimation?: string | Object | boolean
	centered?: any
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	cover?: boolean
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	disabled?: boolean
	displayed?: boolean
	docked?: string
	doneButton?: string | any
	draggable?: boolean | Object | any
	enter?: string
	enterAnimation?: string | any
	exit?: string
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	reveal?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	side?: string
	slots?: Object[]
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	stretchX?: boolean
	stretchY?: boolean
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolbar?: TitleBar | Toolbar | Object
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	useTitles?: boolean
	value?: Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCancel?: (this: Picker) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Picker, values: Object) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPick?: (this: Picker, values: Object, slot: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SelectPicker extends React.Component<SelectPickerProps, any> { }
export interface SelectPickerProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cancelButton?: string | any
	cardSwitchAnimation?: string | Object | boolean
	centered?: any
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	cover?: boolean
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	disabled?: boolean
	displayed?: boolean
	docked?: string
	doneButton?: string | any
	draggable?: boolean | Object | any
	enter?: string
	enterAnimation?: string | any
	exit?: string
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	reveal?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	side?: string
	slots?: Object[]
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	stretchX?: boolean
	stretchY?: boolean
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolbar?: TitleBar | Toolbar | Object
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	useTitles?: boolean
	value?: Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCancel?: (this: Picker) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Picker, values: Object) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPick?: (this: Picker, values: Object, slot: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PickerSlot extends React.Component<PickerSlotProps, any> { }
export interface PickerSlotProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	associatedData?: boolean | Object
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	deferEmptyText?: boolean
	deselectOnContainerClick?: boolean
	disabled?: boolean
	disableSelection?: boolean
	displayed?: boolean
	displayField?: string
	docked?: string
	draggable?: boolean | Object | any
	emptyItemText?: string
	emptyText?: string | boolean
	emptyTextDefaults?: Object | Component
	emptyTextProperty?: string
	enableTextSelection?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	inline?: boolean | Object
	innerCls?: string
	itemButtonMode?: boolean
	itemCls?: string
	itemId?: string
	itemRipple?: boolean | Object
	itemTpl?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	loadingHeight?: number
	loadingText?: string | boolean
	margin?: number | string
	markDirty?: boolean
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	pressedDelay?: number
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: Object
	scrollDock?: string
	scrollToTopOnRefresh?: boolean
	selectable?: Object | any
	selected?: any
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	store: any | Object
	style?: string | Object
	tabIndex?: number
	title?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerCtEvent?: string
	triggerEvent?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: number
	valueField?: string
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChildDoubleTap?: (this: DataView, location: any) => void
	onChildLongpress?: (this: DataView, location: any) => void
	onChildMouseEnter?: (this: DataView, location: any) => void
	onChildMouseLeave?: (this: DataView, location: any) => void
	onChildSingleTap?: (this: DataView, location: any) => void
	onChildTap?: (this: DataView, location: any) => void
	onChildTapHold?: (this: DataView, location: any) => void
	onChildTouchCancel?: (this: DataView, location: any) => void
	onChildTouchEnd?: (this: DataView, location: any) => void
	onChildTouchMove?: (this: DataView, location: any) => void
	onChildTouchStart?: (this: DataView, location: any) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: DataView, records: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemDoubleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemLongpress?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseEnter?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseLeave?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSingleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSwipe?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTapHold?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchCancel?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchEnd?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchMove?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchStart?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: () => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNavigate?: (this: DataView, to: any, from: any) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRefresh?: (this: DataView) => void
	onRemove?: () => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onRowSelection?: (view: DataView, selection: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: DataView, selected: any) => void
	onSelectionChange?: (view: DataView, records: any, selected: boolean, selection: any) => void
	onShow?: (sender: Component) => void
	onSlotPick?: (this: any, value: any, node: HTMLElement) => void
	onStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TabletPicker extends React.Component<TabletPickerProps, any> { }
export interface TabletPickerProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PivotGridCell extends React.Component<PivotGridCellProps, any> { }
export interface PivotGridCellProps {
	align?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	bodyCls?: string
	bodyStyle?: string | Object
	border?: boolean
	cls?: string
	column?: Column
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	encodeHtml?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	formatter?: string
	height?: number | string
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	ripple?: boolean | Object | string
	scope?: Object
	selectable?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	touchAction?: Object
	tpl?: string | string[] | any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	value?: any
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	zeroValue?: string
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PivotGridGroupCell extends React.Component<PivotGridGroupCellProps, any> { }
export interface PivotGridGroupCellProps {
	align?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	bodyCls?: string
	bodyStyle?: string | Object
	border?: boolean
	cls?: string
	column?: Column
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	defaultToolWeights?: Object
	disabled?: boolean
	encodeHtml?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	formatter?: string
	height?: number | string
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderer?: Function | string
	renderTo?: any
	ripple?: boolean | Object | string
	scope?: Object
	selectable?: boolean
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	touchAction?: Object
	tpl?: string | string[] | any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	value?: any
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	zeroValue?: string
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PivotD3Container extends React.Component<PivotD3ContainerProps, any> { }
export interface PivotD3ContainerProps {
	configurator?: any
	drawing?: Component
	matrix: any
}
declare class PivotHeatMap extends React.Component<PivotHeatMapProps, any> { }
export interface PivotHeatMapProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clipScene?: boolean
	cls?: string | string[]
	colorAxis?: any
	componentCls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultFormatter?: string
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	interactions?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	labels?: Object | boolean
	left?: number | string
	legend?: any
	listeners?: Object
	margin?: number | string
	matrix?: any
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: Object | string | number
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	size?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any
	style?: string | Object
	tabIndex?: number
	tiles?: Object
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transitions?: any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	xAxis?: any
	y?: number
	yAxis?: any
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSceneResize?: (component: any, scene: any, size: Object) => void
	onSceneSetup?: (component: any, scene: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PivotTreeMap extends React.Component<PivotTreeMapProps, any> { }
export interface PivotTreeMapProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoExpand?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	busyLayoutText?: string
	centered?: boolean
	clipScene?: boolean
	cls?: string | string[]
	colorAxis?: any
	componentCls?: string
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	expandEventName?: string | string[]
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hierarchyCls?: string
	html?: string | any | HTMLElement
	id?: string
	interactions?: any
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	leafTile?: Object
	left?: number | string
	linkKey?: Function
	listeners?: Object
	margin?: number | string
	matrix?: any
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nodeChildren?: Function
	nodeClass?: Function
	nodeKey?: Function
	nodeText?: Function | string | string[]
	nodeValue?: Function | string | number
	noParentValue?: boolean
	padding?: Object | string | number
	parentTile?: Object
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	rootVisible?: boolean
	scaleLabels?: boolean
	scrollable?: boolean | string | Object
	selectEventName?: string | string[]
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	size?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	store?: any
	style?: string | Object
	tabIndex?: number
	tiling?: Function
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	transitions?: any
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLayout?: (component: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onSceneResize?: (component: any, scene: any, size: Object) => void
	onSceneSetup?: (component: any, scene: any) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PivotGrid extends React.Component<PivotGridProps, any> { }
export interface PivotGridProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	associatedData?: boolean | Object
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	bufferSize?: number
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	clsGrandTotal?: string
	clsGroupTotal?: string
	columnLines?: boolean
	columnMenu?: Object
	columnResize?: boolean
	columns: any
	columnsMenuItem?: any
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: any
	deferEmptyText?: boolean
	deselectOnContainerClick?: boolean
	disabled?: boolean
	disableSelection?: boolean
	disclosureProperty?: string
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	emptyItemText?: string
	emptyText?: string | boolean
	emptyTextDefaults?: Object | Component
	emptyTextProperty?: string
	enableColumnSort?: boolean
	enableLoadMask?: boolean
	enableTextSelection?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	grouped?: boolean
	groupFooter?: Object | ItemHeader
	groupHeader?: Object | ItemHeader
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideHeaders?: boolean
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	indexBar?: boolean | Object | IndexBar
	infinite?: boolean
	inline?: boolean | Object
	innerCls?: string
	itemButtonMode?: boolean
	itemCls?: string
	itemConfig?: Object | any
	itemContentCls?: string
	itemDataMap?: Object
	itemId?: string
	itemInnerCls?: string
	itemRipple?: boolean | Object
	itemsFocusable?: any
	itemTpl?: string | string[] | any
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	leftAxisCellConfig?: Object
	listeners?: Object
	loadingHeight?: number
	loadingText?: string | boolean
	margin?: number | string
	markDirty?: boolean
	masked?: boolean | string | Object | Mask | LoadMask
	matrix: any
	maxHeight?: number | string
	maxItemCache?: number
	maxWidth?: number | string
	minHeight?: number | string
	minimumBufferDistance?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multiColumnSort?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	onItemDisclosure?: boolean | Function | string | Object
	padding?: number | string
	pinFooters?: boolean
	pinHeaders?: boolean
	pinnedFooter?: Object
	pinnedHeader?: Object
	plugins?: Object[] | any | Object
	pressedDelay?: number
	preventSelectionOnDisclose?: boolean
	preventSelectionOnTool?: boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	reserveScrollbar?: boolean
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	rowLines?: boolean
	rowNumbers?: boolean | Object
	scrollable?: boolean | string | Object
	scrollDock?: string
	scrollToTopOnRefresh?: boolean
	selectable?: any
	selection?: any
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sortable?: boolean
	startColGroupsCollapsed?: boolean
	startRowGroupsCollapsed?: boolean
	stateful?: boolean | Object | string[]
	stateId?: string
	store: any | Object
	striped?: boolean
	style?: string | Object
	tabIndex?: number
	title?: string
	titleBar?: Object
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	topAxisCellConfig?: Object
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggerCtEvent?: string
	triggerEvent?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	useSimpleItems?: boolean
	variableHeights?: boolean
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: () => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeSelectionextEnd?: (grid: Grid, An: any, extension: Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCellSelection?: (grid: Grid, selection: any) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChildDoubleTap?: (this: List, location: any) => void
	onChildLongpress?: (this: List, location: any) => void
	onChildMouseEnter?: (this: List, location: any) => void
	onChildMouseLeave?: (this: List, location: any) => void
	onChildSingleTap?: (this: List, location: any) => void
	onChildTap?: (this: List, location: any) => void
	onChildTapHold?: (this: List, location: any) => void
	onChildTouchCancel?: (this: List, location: any) => void
	onChildTouchEnd?: (this: List, location: any) => void
	onChildTouchMove?: (this: List, location: any) => void
	onChildTouchStart?: (this: List, location: any) => void
	onColumnAdd?: (this: Grid, column: Column, index: number) => void
	onColumnHide?: (this: Grid, column: Column) => void
	onColumnMenuCreated?: (grid: Grid, column: any, menu: Menu) => void
	onColumnMove?: (this: Grid, column: Column, fromIndex: number, toIndex: number) => void
	onColumnRemove?: (this: Grid, column: Column) => void
	onColumnResize?: (this: Grid, column: Column, width: number) => void
	onColumnSelection?: (grid: Grid, selection: any) => void
	onColumnShow?: (this: Grid, column: Column) => void
	onColumnSort?: (this: Grid, column: Column, direction: string) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDeselect?: (this: DataView, records: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDisclose?: (list: List, record: any, target: HTMLElement, index: number, event: any) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onItemAction?: (this: List, index: number, record: any, action: string) => void
	onItemDoubleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemLongpress?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseEnter?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemMouseLeave?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSingleTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemSwipe?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTap?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTapHold?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchCancel?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchEnd?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchMove?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onItemTouchStart?: (this: DataView, index: number, target: any | DataItem, record: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: () => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onNavigate?: (this: DataView, to: any, from: any) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPivotBeforeReconfigure?: (matrix: any, config: Object) => void
	onPivotBeforeRequest?: (matrix: any, params: Object) => void
	onPivotBuildTotals?: (matrix: any, totals: Object[]) => void
	onPivotColumnsBuilt?: (matrix: any, columns: Object[]) => void
	onPivotDone?: (matrix: any) => void
	onPivotGroupCellDoubleTap?: (params: Object, e: any) => void
	onPivotGroupCellTap?: (params: Object, e: any) => void
	onPivotGroupCellTapHold?: (params: Object, e: any) => void
	onPivotGroupCollapse?: (matrix: any, type: string, group: any) => void
	onPivotGroupDoubleTap?: (params: Object, e: any) => void
	onPivotGroupExpand?: (matrix: any, type: string, group: any) => void
	onPivotGroupTap?: (params: Object, e: any) => void
	onPivotGroupTapHold?: (params: Object, e: any) => void
	onPivotItemCellDoubleTap?: (params: Object, e: any) => void
	onPivotItemCellTap?: (params: Object, e: any) => void
	onPivotItemCellTapHold?: (params: Object, e: any) => void
	onPivotItemDoubleTap?: (params: Object, e: any) => void
	onPivotItemTap?: (params: Object, e: any) => void
	onPivotItemTapHold?: (params: Object, e: any) => void
	onPivotModelBuilt?: (matrix: any, model: any) => void
	onPivotProgress?: (matrix: any, index: number, total: number) => void
	onPivotReconfigure?: (matrix: any, config: Object) => void
	onPivotRecordBuilt?: (matrix: any, record: any) => void
	onPivotRequestException?: (matrix: any, response: Object) => void
	onPivotStart?: (matrix: any) => void
	onPivotStoreBuilt?: (matrix: any, store: any) => void
	onPivotTotalCellDoubleTap?: (params: Object, e: any) => void
	onPivotTotalCellTap?: (params: Object, e: any) => void
	onPivotTotalCellTapHold?: (params: Object, e: any) => void
	onPivotTotalDoubleTap?: (params: Object, e: any) => void
	onPivotTotalTap?: (params: Object, e: any) => void
	onPivotTotalTapHold?: (params: Object, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRefresh?: (this: DataView) => void
	onRemove?: () => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onSelect?: (this: DataView, selected: any) => void
	onSelectionExtenderDrag?: (grid: Grid, An: any, extension: Object) => void
	onShow?: (sender: Component) => void
	onStoreChange?: (sender: any, value: any | Object, oldValue: any | Object) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PivotConfigField extends React.Component<PivotConfigFieldProps, any> { }
export interface PivotConfigFieldProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	dataMap?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	recordIndex?: number
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (dataItem: DataItem, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PivotConfigContainer extends React.Component<PivotConfigContainerProps, any> { }
export interface PivotConfigContainerProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	fieldType?: any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PivotConfigform extends React.Component<PivotConfigformProps, any> { }
export interface PivotConfigformProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	api?: Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	baseParams?: Object
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enableSubmissionForm?: boolean
	enctype?: string
	enterAnimation?: string | any
	exitAnimation?: string | any
	fieldSeparators?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	inputBorders?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	method?: string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multipartDetection?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	paramOrder?: string | string[]
	paramsAsHash?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	standardSubmit?: boolean
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	submitOnAction?: Object
	tabIndex?: number
	tbar?: Object | Object[]
	timeout?: number
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	trackResetOnLoad?: boolean
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	url?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeSubmit?: (this: any, values: Object, options: Object, e: any) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onException?: (this: any, result: Object) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSubmit?: (this: any, result: Object, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PivotConfigPanel extends React.Component<PivotConfigPanelProps, any> { }
export interface PivotConfigPanelProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	panelAggFieldsText?: string
	panelAggFieldsTitle?: string
	panelAllFieldsText?: string
	panelAllFieldsTitle?: string
	panelLeftFieldsText?: string
	panelLeftFieldsTitle?: string
	panelTopFieldsText?: string
	panelTopFieldsTitle?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Pivotsettings extends React.Component<PivotsettingsProps, any> { }
export interface PivotsettingsProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	api?: Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	baseParams?: Object
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enableSubmissionForm?: boolean
	enctype?: string
	enterAnimation?: string | any
	exitAnimation?: string | any
	fieldSeparators?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	inputBorders?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	method?: string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multipartDetection?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	paramOrder?: string | string[]
	paramsAsHash?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	standardSubmit?: boolean
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	submitOnAction?: Object
	tabIndex?: number
	tbar?: Object | Object[]
	timeout?: number
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	trackResetOnLoad?: boolean
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	url?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeSubmit?: (this: any, values: Object, options: Object, e: any) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onException?: (this: any, result: Object) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSubmit?: (this: any, result: Object, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PivotRangeEditor extends React.Component<PivotRangeEditorProps, any> { }
export interface PivotRangeEditorProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	api?: Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	baseParams?: Object
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enableSubmissionForm?: boolean
	enctype?: string
	enterAnimation?: string | any
	exitAnimation?: string | any
	fieldSeparators?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	inputBorders?: boolean
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	method?: string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	multipartDetection?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	paramOrder?: string | string[]
	paramsAsHash?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	standardButtons?: Object
	standardSubmit?: boolean
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	submitOnAction?: Object
	tabIndex?: number
	tbar?: Object | Object[]
	timeout?: number
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	trackResetOnLoad?: boolean
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	url?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeSubmit?: (this: any, values: Object, options: Object, e: any) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onException?: (this: any, result: Object) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onSubmit?: (this: any, result: Object, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PivotGridRow extends React.Component<PivotGridRowProps, any> { }
export interface PivotGridRowProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	body?: Object
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultCellUI?: string
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	expandedField?: string
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	recordIndex?: number
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Progress extends React.Component<ProgressProps, any> { }
export interface ProgressProps {
	alwaysOnTop?: boolean | number
	animate?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	text?: string
	textTpl?: string | any
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: number
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ProgressBarWidget extends React.Component<ProgressBarWidgetProps, any> { }
export interface ProgressBarWidgetProps {
	alwaysOnTop?: boolean | number
	animate?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	text?: string
	textTpl?: string | any
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: number
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SegmentedButton extends React.Component<SegmentedButtonProps, any> { }
export interface SegmentedButtonProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowDepress?: boolean
	allowFocusingDisabledChildren?: boolean
	allowMultiple?: boolean
	allowToggle?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	defaultUI?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	forceSelection?: boolean
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	pressedButtons?: Object[]
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: string | number | string[] | number[]
	vertical?: boolean
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: SegmentedButton, value: Object | Object[], oldValue: Object | Object[]) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onToggle?: (this: SegmentedButton, button: Button, isPressed: boolean) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Sheet extends React.Component<SheetProps, any> { }
export interface SheetProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	cover?: boolean
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enter?: string
	enterAnimation?: string | any
	exit?: string
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	reveal?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	side?: string
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	stretchX?: boolean
	stretchY?: boolean
	style?: string | Object
	tabIndex?: number
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Slider extends React.Component<SliderProps, any> { }
export interface SliderProps {
	allowThumbsOverlapping?: boolean
	alwaysOnTop?: boolean | number
	animation?: boolean | Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	increment?: number
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxValue?: number
	maxWidth?: number | string
	minHeight?: number | string
	minValue?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	thumbDefaults?: Object
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: number | number[]
	valueIsArray?: boolean
	values?: number | number[]
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Slider, thumb: Thumb, newValue: number, oldValue: number) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrag?: (this: Slider, thumb: Thumb, e: any) => void
	onDragEnd?: (this: Slider, thumb: Thumb, value: Object[], e: any) => void
	onDragStart?: (this: Slider, thumb: Thumb, value: Object[], e: any) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Thumb extends React.Component<ThumbProps, any> { }
export interface ThumbProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	fillCls?: string
	fillTrack?: boolean | string
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ToggleSlider extends React.Component<ToggleSliderProps, any> { }
export interface ToggleSliderProps {
	allowThumbsOverlapping?: boolean
	alwaysOnTop?: boolean | number
	animation?: boolean | Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	increment?: number
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxValue?: number
	maxWidth?: number | string
	minHeight?: number | string
	minValue?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	thumbDefaults?: Object
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: number | number[]
	valueIsArray?: boolean
	values?: number | number[]
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: Slider, thumb: Thumb, newValue: number, oldValue: number) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrag?: (this: Slider, thumb: Thumb, e: any) => void
	onDragEnd?: (this: Slider, thumb: Thumb, value: Object[], e: any) => void
	onDragStart?: (this: Slider, thumb: Thumb, value: Object[], e: any) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Spacer extends React.Component<SpacerProps, any> { }
export interface SpacerProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SparkLineBar extends React.Component<SparkLineBarProps, any> { }
export interface SparkLineBarProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	barColor?: string
	barSpacing?: number
	barWidth?: number
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	chartRangeClip?: boolean
	chartRangeMax?: number
	chartRangeMin?: number
	cls?: string | string[]
	colorMap?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	disableTooltips?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightColor?: string
	highlightLighten?: number
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	lineColor?: string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	negBarColor?: string
	nullColor?: string
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stackedBarColor?: string[]
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tipTpl?: string | any
	toFrontOnShow?: boolean
	tooltip?: string | Object
	tooltipPrefix?: string
	tooltipSkipNull?: boolean
	tooltipSuffix?: string
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	values?: number[]
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zeroAxis?: boolean
	zeroColor?: string
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SparkLine extends React.Component<SparkLineProps, any> { }
export interface SparkLineProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	disableTooltips?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightColor?: string
	highlightLighten?: number
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	lineColor?: string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tipTpl?: string | any
	toFrontOnShow?: boolean
	tooltip?: string | Object
	tooltipPrefix?: string
	tooltipSkipNull?: boolean
	tooltipSuffix?: string
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	values?: number[]
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SparkLineBox extends React.Component<SparkLineBoxProps, any> { }
export interface SparkLineBoxProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	boxFillColor?: string
	boxLineColor?: string
	centered?: boolean
	chartRangeMax?: number
	chartRangeMin?: number
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	disableTooltips?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightColor?: string
	highlightLighten?: number
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	lineColor?: string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	medianColor?: string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	outlierFillColor?: string
	outlierIQR?: number
	outlierLineColor?: string
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	raw?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showOutliers?: boolean
	spotRadius?: number
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	target?: number
	targetColor?: string
	tipTpl?: string | any
	toFrontOnShow?: boolean
	tooltip?: string | Object
	tooltipPrefix?: string
	tooltipSkipNull?: boolean
	tooltipSuffix?: string
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	values?: number[]
	viewModel?: string | Object | any
	weight?: number
	whiskerColor?: string
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SparkLineBullet extends React.Component<SparkLineBulletProps, any> { }
export interface SparkLineBulletProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	base?: number
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	disableTooltips?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightColor?: string
	highlightLighten?: number
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	lineColor?: string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	performanceColor?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	rangeColors?: string[]
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	targetColor?: string
	targetWidth?: number
	tipTpl?: string | any
	toFrontOnShow?: boolean
	tooltip?: string | Object
	tooltipPrefix?: string
	tooltipSkipNull?: boolean
	tooltipSuffix?: string
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	values?: number[]
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SparkLineDiscrete extends React.Component<SparkLineDiscreteProps, any> { }
export interface SparkLineDiscreteProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	chartRangeClip?: boolean
	chartRangeMax?: number
	chartRangeMin?: number
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	disableTooltips?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightColor?: string
	highlightLighten?: number
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	lineColor?: string
	lineHeight?: number
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	thresholdColor?: string
	thresholdValue?: number
	tipTpl?: string | any
	toFrontOnShow?: boolean
	tooltip?: string | Object
	tooltipPrefix?: string
	tooltipSkipNull?: boolean
	tooltipSuffix?: string
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	values?: number[]
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SparkLineLine extends React.Component<SparkLineLineProps, any> { }
export interface SparkLineLineProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	chartRangeMax?: number
	chartRangeMaxX?: number
	chartRangeMin?: number
	chartRangeMinX?: number
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	disableTooltips?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	drawNormalOnTop?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	fillColor?: string
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightColor?: string
	highlightLighten?: number
	highlightLineColor?: string
	highlightSpotColor?: string
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	lineColor?: string
	lineWidth?: number
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxSpotColor?: string
	maxWidth?: number | string
	minHeight?: number | string
	minSpotColor?: string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	normalRangeColor?: string
	normalRangeMax?: number
	normalRangeMin?: number
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	spotColor?: string
	spotRadius?: number
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tipTpl?: string | any
	toFrontOnShow?: boolean
	tooltip?: string | Object
	tooltipPrefix?: string
	tooltipSkipNull?: boolean
	tooltipSuffix?: string
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	values?: number[]
	valueSpots?: Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SparkLinePie extends React.Component<SparkLinePieProps, any> { }
export interface SparkLinePieProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	borderColor?: string
	borderWidth?: number
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	disableTooltips?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightColor?: string
	highlightLighten?: number
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	lineColor?: string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	offset?: number
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	sliceColors?: string[]
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tipTpl?: string | any
	toFrontOnShow?: boolean
	tooltip?: string | Object
	tooltipPrefix?: string
	tooltipSkipNull?: boolean
	tooltipSuffix?: string
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	values?: number[]
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SparkLineTristate extends React.Component<SparkLineTristateProps, any> { }
export interface SparkLineTristateProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	barSpacing?: number
	barWidth?: number
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	colorMap?: Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	disableTooltips?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	highlightColor?: string
	highlightLighten?: number
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	lineColor?: string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	negBarColor?: string
	padding?: number | string
	plugins?: Object[] | any | Object
	posBarColor?: string
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tipTpl?: string | any
	toFrontOnShow?: boolean
	tooltip?: string | Object
	tooltipPrefix?: string
	tooltipSkipNull?: boolean
	tooltipSuffix?: string
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	values?: number[]
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zeroBarColor?: string
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class SplitButton extends React.Component<SplitButtonProps, any> { }
export interface SplitButtonProps {
	allowDepress?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	arrow?: boolean
	arrowAlign?: string
	arrowHandler?: Function
	autoEvent?: string
	axisLock?: boolean
	badgeText?: string
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	buttonType?: string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enableToggle?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	handler?: Function
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | string | Object
	menuAlign?: string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	pressed?: boolean
	pressedDelay?: number | boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	stretchMenu?: boolean
	style?: string | Object
	tabIndex?: number
	text?: string
	textAlign?: string
	toFrontOnShow?: boolean
	toggleHandler?: Function
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: string | number
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onArrowClick?: (this: SplitButton, e: any) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforePressedChange?: (sender: Button, value: boolean, oldValue: boolean) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onPressedChange?: (sender: Button, value: boolean, oldValue: boolean) => void
	onRelease?: (this: Button, e: any) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onTap?: (this: Button, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TabBar extends React.Component<TabBarProps, any> { }
export interface TabBarProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	activeTab?: number | string | Component
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	animateIndicator?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultButtonUI?: string
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultTabUI?: string
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	title?: string | Title
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onActiveTabChange?: (sender: any, value: number | string | Component, oldValue: number | string | Component) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeActiveTabChange?: (sender: any, value: number | string | Component, oldValue: number | string | Component) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onTabChange?: (this: any, newTab: Tab, oldTab: Tab) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TabPanel extends React.Component<TabPanelProps, any> { }
export interface TabPanelProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scroll?: boolean | string | Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabBar?: Object
	tabBarPosition?: string
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Tab extends React.Component<TabProps, any> { }
export interface TabProps {
	active?: boolean
	allowDepress?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	arrow?: boolean
	arrowAlign?: string
	autoEvent?: string
	axisLock?: boolean
	badgeText?: string
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	buttonType?: string
	centered?: boolean
	closable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	destroyMenu?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enableToggle?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	handler?: Function
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	menu?: Menu | string | Object
	menuAlign?: string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	pressed?: boolean
	pressedDelay?: number | boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	stretchMenu?: boolean
	style?: string | Object
	tabIndex?: number
	text?: string
	textAlign?: string
	title?: string
	toFrontOnShow?: boolean
	toggleHandler?: Function
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: string | number
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (this: Tab) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforePressedChange?: (sender: Button, value: boolean, oldValue: boolean) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (this: Tab) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onPressedChange?: (sender: Button, value: boolean, oldValue: boolean) => void
	onRelease?: (this: Button, e: any) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onTap?: (this: Button, e: any) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ToolTip extends React.Component<ToolTipProps, any> { }
export interface ToolTipProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	align?: string
	alignDelegate?: string
	allowFocusingDisabledChildren?: boolean
	allowOver?: boolean
	alwaysOnTop?: boolean | number
	anchor?: boolean
	anchorToTarget?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoHide?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bbar?: Object | Object[]
	bind?: Object | string
	bodyBorder?: boolean
	bodyPadding?: number | boolean | string
	bodyStyle?: string | Object
	border?: boolean
	bottom?: number | string
	buttonAlign?: string
	buttons?: Object | any
	buttonToolbar?: Object | Toolbar
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	closable?: boolean
	closeAction?: string
	closeToolText?: string
	cls?: string | string[]
	collapsed?: boolean
	collapsible?: string | boolean | Object
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultToolWeights?: Object
	defaultType?: string
	delegate?: string
	disabled?: boolean
	dismissDelay?: number
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	header?: boolean | Object
	headerPosition?: string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideDelay?: number
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	icon?: string
	iconAlign?: string
	iconCls?: string
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	lbar?: Object | Object[]
	left?: number | string
	listeners?: Object
	manageBorders?: boolean
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minButtonWidth?: number
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	mouseOffset?: number[]
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	quickShowInterval?: number
	rbar?: Object | Object[]
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	resizable?: Object
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showDelay?: number
	showOnTap?: boolean | string[]
	standardButtons?: Object
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	target?: Component | any
	tbar?: Object | Object[]
	title?: string | any
	titleAlign?: string
	toFrontOnShow?: boolean
	toolDefaults?: Object
	tools?: any | Object | Object[]
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	trackMouse?: boolean
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeCollapse?: (this: Panel) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeExpand?: (this: Panel) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeResizeDragStart?: (this: Panel, context: Object) => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onCollapse?: (this: Panel) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onDrawerHide?: (this: Panel) => void
	onDrawerShow?: (this: Panel) => void
	onErased?: (sender: Component) => void
	onExpand?: (this: Panel) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onResizeDrag?: (this: Panel, context: Object) => void
	onResizeDragCancel?: (this: Panel, context: Object) => void
	onResizeDragEnd?: (this: Panel, context: Object) => void
	onResizeDragStart?: (this: Panel, context: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Title extends React.Component<TitleProps, any> { }
export interface TitleProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	title?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class TitleBar extends React.Component<TitleBarProps, any> { }
export interface TitleBarProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultButtonUI?: string
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: any
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxButtonWidth?: string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	title?: string
	titleAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Tool extends React.Component<ToolProps, any> { }
export interface ToolProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	passive?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	stopEvent?: boolean
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	toolOwner?: Component
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	type?: string
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onClick?: (this: Tool, e: any, owner: Component) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class PanelTool extends React.Component<PanelToolProps, any> { }
export interface PanelToolProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	handler?: Function | string
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	iconCls?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	passive?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scope?: Object
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	stopEvent?: boolean
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	toolOwner?: Component
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	type?: string
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onClick?: (this: Tool, e: any, owner: Component) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Toolbar extends React.Component<ToolbarProps, any> { }
export interface ToolbarProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultButtonUI?: string
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	title?: string | Title
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ColorButton extends React.Component<ColorButtonProps, any> { }
export interface ColorButtonProps {
	alphaDecimalFormat?: string
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	format?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: string
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: any, color: string, previousColor: string) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ColorPickerColorMap extends React.Component<ColorPickerColorMapProps, any> { }
export interface ColorPickerColorMapProps {
}
declare class ColorPickerColorPreview extends React.Component<ColorPickerColorPreviewProps, any> { }
export interface ColorPickerColorPreviewProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ColorField extends React.Component<ColorFieldProps, any> { }
export interface ColorFieldProps {
	alignTarget?: string
	alphaDecimalFormat?: string
	alwaysOnTop?: boolean | number
	animateUnderline?: boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoCapitalize?: boolean
	autoComplete?: boolean
	autoCorrect?: boolean
	autoFitErrors?: boolean
	autoHideInputMask?: boolean
	axisLock?: boolean
	badFormatMessage?: string
	bind?: Object | string
	bodyAlign?: any
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clearable?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	edgePicker?: Object
	editable?: boolean
	enterAnimation?: string | any
	error?: string | string[]
	errorMessage?: string
	errorTarget?: string
	errorTip?: Object
	errorTpl?: string | string[] | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	floatedPicker?: Object
	floatedPickerAlign?: string
	focusCls?: string
	format?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	hideTrigger?: boolean
	html?: string | any | HTMLElement
	id?: string
	inline?: boolean
	inputCls?: string
	inputMask?: string | any
	inputType?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	label?: string
	labelAlign?: string
	labelCls?: string
	labelMinWidth?: number | string
	labelTextAlign?: string
	labelWidth?: number | string
	labelWrap?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	matchFieldWidth?: boolean
	maxHeight?: number | string
	maxLength?: number
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	pattern?: string
	picker?: string | Object
	placeholder?: string
	placeHolder?: string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	readOnly?: boolean
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	required?: boolean
	requiredMessage?: string
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	triggers?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	validateDisabled?: boolean
	validationMessage?: string
	validators?: any
	value?: any
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAction?: (this: any, e: any) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: any, e: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onChange?: (this: any, color: string, previousColor: string) => void
	onClearIconTap?: (this: any, input: any, e: any) => void
	onClick?: (e: any) => void
	onCollapse?: (field: any) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onErrorChange?: (this: Field, error: string) => void
	onExpand?: (field: any) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: any, e: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onKeyUp?: (this: any, e: any) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMouseDown?: (this: any, e: any) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPaste?: (this: any, e: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class ColorSelector extends React.Component<ColorSelectorProps, any> { }
export interface ColorSelectorProps {
	alphaDecimalFormat?: string
	cancelButtonText?: string
	fieldPad?: number
	fieldWidth?: number
	format?: string
	okButtonText?: string
	showOkCancelButtons?: boolean
	showPreviousColor?: boolean
	value?: string
	onCancel?: (this: any) => void
	onChange?: (this: any, color: string, previousColor: string) => void
	onOk?: (this: any, color: string) => void
}
declare class ColorPickerSlider extends React.Component<ColorPickerSliderProps, any> { }
export interface ColorPickerSliderProps {
}
declare class ColorPickerSliderAlpha extends React.Component<ColorPickerSliderAlphaProps, any> { }
export interface ColorPickerSliderAlphaProps {
}
declare class ColorPickerSliderHue extends React.Component<ColorPickerSliderHueProps, any> { }
export interface ColorPickerSliderHueProps {
}
declare class ColorPickerSliderSaturation extends React.Component<ColorPickerSliderSaturationProps, any> { }
export interface ColorPickerSliderSaturationProps {
}
declare class ColorPickerSliderValue extends React.Component<ColorPickerSliderValueProps, any> { }
export interface ColorPickerSliderValueProps {
}
declare class Gauge extends React.Component<GaugeProps, any> { }
export interface GaugeProps {
	alwaysOnTop?: boolean | number
	angleOffset?: number
	animation?: Object | boolean
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	clockwise?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxValue?: number
	maxWidth?: number | string
	minHeight?: number | string
	minValue?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	needle?: any
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	textAlign?: string
	textOffset?: Object
	textTpl?: any
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	trackLength?: number
	trackStart?: number
	trackStyle?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: number
	valueStyle?: Object
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Map extends React.Component<MapProps, any> { }
export interface MapProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	geo?: any
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	map?: any
	mapListeners?: Object
	mapOptions?: Object
	margin?: number | string
	markers?: any | Object
	markerTemplate?: Object | any
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	requiredScripts?: string | string[]
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	useCurrentLocation?: boolean | any
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenterChange?: (this: Map, map: any, center: any) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMapRender?: (this: Map, map: any) => void
	onMarkerClick?: (map: Map, info: Object) => void
	onMarkerDblClick?: (map: Map, info: Object) => void
	onMarkerDrag?: (map: Map, info: Object) => void
	onMarkerDragEnd?: (map: Map, info: Object) => void
	onMarkerDragStart?: (map: Map, info: Object) => void
	onMarkerMouseDown?: (map: Map, info: Object) => void
	onMarkerMouseOut?: (map: Map, info: Object) => void
	onMarkerMouseOver?: (map: Map, info: Object) => void
	onMarkerMouseUp?: (map: Map, info: Object) => void
	onMarkerRightClick?: (map: Map, info: Object) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onTypeChange?: (this: Map, map: any, mapType: number) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onZoomChange?: (this: Map, map: any, zoomLevel: number) => void
}
declare class Google_Map extends React.Component<Google_MapProps, any> { }
export interface Google_MapProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	geo?: any
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	map?: any
	mapListeners?: Object
	mapOptions?: Object
	margin?: number | string
	markers?: any | Object
	markerTemplate?: Object | any
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	requiredScripts?: string | string[]
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	useCurrentLocation?: boolean | any
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenterChange?: (this: Map, map: any, center: any) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMapRender?: (this: Map, map: any) => void
	onMarkerClick?: (map: Map, info: Object) => void
	onMarkerDblClick?: (map: Map, info: Object) => void
	onMarkerDrag?: (map: Map, info: Object) => void
	onMarkerDragEnd?: (map: Map, info: Object) => void
	onMarkerDragStart?: (map: Map, info: Object) => void
	onMarkerMouseDown?: (map: Map, info: Object) => void
	onMarkerMouseOut?: (map: Map, info: Object) => void
	onMarkerMouseOver?: (map: Map, info: Object) => void
	onMarkerMouseUp?: (map: Map, info: Object) => void
	onMarkerRightClick?: (map: Map, info: Object) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onTypeChange?: (this: Map, map: any, mapType: number) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onZoomChange?: (this: Map, map: any, zoomLevel: number) => void
}
declare class Rating extends React.Component<RatingProps, any> { }
export interface RatingProps {
	alwaysOnTop?: boolean | number
	animate?: boolean | Object
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	family?: string
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	glyphs?: string | string[] | number[]
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	limit?: number
	listeners?: Object
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minimum?: number
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	overStyle?: string | Object
	padding?: number | string
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	rounding?: number
	scale?: string
	scrollable?: boolean | string | Object
	selectedStyle?: string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	tip?: Object | string | string[] | any | Function
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	trackOver?: boolean
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	value?: number
	viewModel?: string | Object | any
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Video extends React.Component<VideoProps, any> { }
export interface VideoProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoPause?: boolean
	autoResume?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	controller?: string | Object | any
	controls?: boolean
	data?: Object
	defaultListenerScope?: boolean
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enableControls?: boolean
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	fullscreen?: boolean
	height?: number | string
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	left?: number | string
	listeners?: Object
	loop?: boolean
	margin?: number | string
	maxHeight?: number | string
	maxWidth?: number | string
	media?: any
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	muted?: boolean
	name?: string
	nameable?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	posterUrl?: string
	preload?: boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	relative?: boolean
	renderTo?: any
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	showPosterOnPause?: boolean
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	url?: string | Object[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	volume?: number
	weight?: number
	width?: number | string
	x?: number
	y?: number
	zIndex?: number
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onEnded?: (this: Media, time: number) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onMutedChange?: (this: Media, muted: boolean) => void
	onOrientationChange?: () => void
	onPainted?: (sender: Component, element: any) => void
	onPause?: (this: Media, time: number) => void
	onPlay?: (this: Media) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onStop?: (this: Media) => void
	onTimeUpdate?: (this: Media, time: number) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onVolumeChange?: (this: Media, volume: number) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Viewport extends React.Component<ViewportProps, any> { }
export interface ViewportProps {
	activeChildTabIndex?: number
	activeItem?: Component | Object | string | number
	allowFocusingDisabledChildren?: boolean
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	autoDestroy?: boolean
	autoSize?: boolean
	axisLock?: boolean
	bind?: Object | string
	border?: boolean
	bottom?: number | string
	cardSwitchAnimation?: string | Object | boolean
	centered?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	contentEl?: any | HTMLElement | string
	control?: Object
	controller?: string | Object | any
	data?: Object
	defaultFocus?: string
	defaultListenerScope?: boolean
	defaults?: Object
	defaultType?: string
	disabled?: boolean
	displayed?: boolean
	docked?: string
	draggable?: boolean | Object | any
	enterAnimation?: string | any
	exitAnimation?: string | any
	flex?: number | string | Object
	floated?: boolean
	focusableContainer?: boolean
	focusCls?: string
	fullscreen?: boolean
	hidden?: boolean
	hideAnimation?: string | any
	hideMode?: string
	hideOnMaskTap?: boolean
	html?: string | any | HTMLElement
	id?: string
	inactiveChildTabIndex?: number
	innerCls?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	layout?: Object | string
	left?: number | string
	listeners?: Object
	margin?: number | string
	masked?: boolean | string | Object | Mask | LoadMask
	maxHeight?: number | string
	maxWidth?: number | string
	minHeight?: number | string
	minWidth?: number | string
	modal?: boolean
	modelValidation?: boolean
	name?: string
	nameable?: boolean
	nameHolder?: boolean
	padding?: number | string
	plugins?: Object[] | any | Object
	preventZooming?: boolean
	publishes?: string | string[] | Object
	record?: any
	reference?: string
	referenceHolder?: boolean
	relative?: boolean
	renderTo?: any
	resetFocusPosition?: boolean
	right?: number | string
	ripple?: boolean | Object | string
	scrollable?: boolean | string | Object
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	showAnimation?: string | any
	stateful?: boolean | Object | string[]
	stateId?: string
	style?: string | Object
	swipeThreshold?: number
	tabIndex?: number
	toFrontOnShow?: boolean
	tooltip?: string | Object
	top?: number | string
	touchAction?: Object
	tpl?: string | string[] | any
	tplWriteMode?: string
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	userSelectable?: boolean | string | Object
	viewModel?: string | Object | any
	weight?: number
	weighted?: boolean
	x?: number
	y?: number
	zIndex?: number
	onActivate?: (newActiveItem: Object, this: Container, oldActiveItem: Object) => void
	onActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onAdd?: (this: Container, item: Object, index: number) => void
	onAdded?: (sender: Component, container: Container, index: number) => void
	onBeforeActiveItemChange?: (sender: Container, value: Component | Object | string | number, oldValue: Component | Object | string | number) => void
	onBeforeBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHide?: (sender: Component) => void
	onBeforeLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeOrientationChange?: () => void
	onBeforeRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onBeforeShow?: (sender: Component) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onBottomChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onCenteredChange?: (sender: Component, value: boolean, oldValue: boolean) => void
	onDeactivate?: (oldActiveItem: Object, this: Container, newActiveItem: Object) => void
	onDestroy?: () => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onDockedChange?: (sender: Component, value: string, oldValue: string) => void
	onErased?: (sender: Component) => void
	onFloatingChange?: (sender: Component, positioned: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onFullscreen?: (sender: Component) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onHide?: (sender: Component) => void
	onInitialize?: (sender: Component) => void
	onLeftChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaxHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMaximize?: (this: any) => void
	onMaxWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinHeightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMinWidthChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onMove?: (this: Container, item: Object, toIndex: number, fromIndex: number) => void
	onMoved?: (sender: Component, container: Container, toIndex: number, fromIndex: number) => void
	onOrientationChange?: (this: any, newOrientation: string, width: number, height: number) => void
	onPainted?: (sender: Component, element: any) => void
	onPositionedChange?: (sender: Component, positioned: boolean) => void
	onReady?: (this: any) => void
	onRemove?: (this: Container, item: Object, index: number) => void
	onRemoved?: (sender: Component, container: Container, index: number) => void
	onRenderedChange?: (this: Container, item: Object, rendered: boolean) => void
	onResize?: (element: any, info: Object) => void
	onRightChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onScrollableChange?: (sender: Component, value: boolean | string | Object, oldValue: boolean | string | Object) => void
	onShow?: (sender: Component) => void
	onToFront?: (this: Component) => void
	onTopChange?: (sender: Component, value: number | string, oldValue: number | string) => void
	onUpdateData?: (sender: Component, newData: Object) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}
declare class Widget extends React.Component<WidgetProps, any> { }
export interface WidgetProps {
	alwaysOnTop?: boolean | number
	ariaAttributes?: Object
	ariaDescribedBy?: string
	ariaLabel?: string
	ariaLabelledBy?: string
	bind?: Object | string
	border?: boolean
	cls?: string | string[]
	constrainAlign?: string | any
	controller?: string | Object | any
	defaultListenerScope?: boolean
	disabled?: boolean
	flex?: number | string | Object
	floated?: boolean
	focusCls?: string
	height?: number | string
	hidden?: boolean
	hideMode?: string
	id?: string
	itemId?: string
	keyMap?: Object
	keyMapEnabled?: boolean
	listeners?: Object
	name?: string
	nameable?: boolean
	plugins?: Object[] | any | Object
	publishes?: string | string[] | Object
	reference?: string
	relative?: boolean
	renderTo?: any
	ripple?: boolean | Object | string
	selfAlign?: string
	session?: boolean | Object | any
	shadow?: boolean
	shareableName?: boolean
	shim?: boolean
	style?: string | Object
	toFrontOnShow?: boolean
	touchAction?: Object
	twoWayBindable?: string | string[] | Object
	ui?: string | string[]
	userCls?: string | string[]
	viewModel?: string | Object | any
	width?: number | string
	x?: number
	y?: number
	onBeforeDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBeforeHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onBeforeToFront?: (this: Component) => void
	onBeforeWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onBlur?: (this: Component, event: any) => void
	onDisabledChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onFocus?: (this: Component | Widget, event: any) => void
	onFocusEnter?: (this: Component, event: any) => void
	onFocusLeave?: (this: Component, event: any) => void
	onHeightChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
	onHiddenChange?: (sender: Widget, value: boolean, oldValue: boolean) => void
	onToFront?: (this: Component) => void
	onWidthChange?: (sender: Widget, value: number | string, oldValue: number | string) => void
}